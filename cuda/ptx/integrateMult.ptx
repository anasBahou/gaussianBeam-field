//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2_
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.const .align 4 .b8 uDimProd[12];
.const .align 4 .b8 lDim[16];
.const .align 4 .b8 vDim[16];
.const .align 16 .b8 randPhase[16];
.const .align 8 .b8 lMixtureAlpha[256];
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2_(
	.param .u64 _Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_0,
	.param .u64 _Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_1,
	.param .u64 _Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_2,
	.param .u64 _Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_3,
	.param .u64 _Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_4,
	.param .u64 _Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_5,
	.param .u64 _Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_6,
	.param .u64 _Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_7,
	.param .u64 _Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_8
)
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<94>;
	.reg .f64 	%fd<240>;
	.reg .b64 	%rd<46>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [_Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_0];
	ld.param.u64 	%rd3, [_Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_1];
	ld.param.u64 	%rd4, [_Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_2];
	ld.param.u64 	%rd5, [_Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_3];
	ld.param.u64 	%rd6, [_Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_4];
	ld.param.u64 	%rd7, [_Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_5];
	ld.param.u64 	%rd8, [_Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_6];
	ld.param.u64 	%rd9, [_Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_7];
	ld.param.u64 	%rd10, [_Z13integrateMultP7double2PKS_S2_S2_S2_S2_S2_S2_S2__param_8];
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %ctaid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r14, %r15, %r16;
	ld.const.u32 	%r17, [uDimProd+8];
	setp.ge.s32	%p1, %r1, %r17;
	@%p1 bra 	BB0_19;

	cvta.to.global.u64 	%rd11, %rd7;
	ld.const.u32 	%r18, [uDimProd+4];
	div.s32 	%r19, %r1, %r18;
	mul.lo.s32 	%r20, %r19, %r18;
	sub.s32 	%r21, %r1, %r20;
	ld.const.u32 	%r22, [uDimProd];
	div.s32 	%r23, %r21, %r22;
	rem.s32 	%r24, %r1, %r22;
	ld.const.u32 	%r25, [lDim+4];
	setp.gt.s32	%p2, %r25, 1;
	ld.const.u32 	%r2, [lDim];
	selp.b32	%r26, %r2, 0, %p2;
	mul.lo.s32 	%r27, %r26, %r24;
	mul.lo.s32 	%r28, %r25, %r2;
	ld.const.u32 	%r29, [lDim+8];
	setp.gt.s32	%p3, %r29, 1;
	selp.b32	%r30, %r28, 0, %p3;
	mad.lo.s32 	%r31, %r30, %r23, %r27;
	mul.lo.s32 	%r32, %r28, %r29;
	ld.const.u32 	%r33, [lDim+12];
	setp.gt.s32	%p4, %r33, 1;
	selp.b32	%r34, %r32, 0, %p4;
	mad.lo.s32 	%r3, %r34, %r19, %r31;
	ld.const.u32 	%r35, [vDim+4];
	setp.gt.s32	%p5, %r35, 1;
	selp.b32	%r36, %r24, 0, %p5;
	ld.const.u32 	%r37, [vDim+8];
	setp.gt.s32	%p6, %r37, 1;
	selp.b32	%r38, %r35, 0, %p6;
	mad.lo.s32 	%r39, %r38, %r23, %r36;
	mul.lo.s32 	%r40, %r35, %r37;
	ld.const.u32 	%r41, [vDim+12];
	setp.gt.s32	%p7, %r41, 1;
	selp.b32	%r42, %r40, 0, %p7;
	mad.lo.s32 	%r43, %r42, %r19, %r39;
	mul.wide.s32 	%rd12, %r43, 16;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.v2.f64 	{%fd42, %fd43}, [%rd13];
	cvta.to.global.u64 	%rd14, %rd8;
	add.s64 	%rd15, %rd14, %rd12;
	ld.global.v2.f64 	{%fd44, %fd45}, [%rd15];
	cvta.to.global.u64 	%rd16, %rd9;
	add.s64 	%rd17, %rd16, %rd12;
	ld.global.v2.f64 	{%fd46, %fd47}, [%rd17];
	cvta.to.global.u64 	%rd18, %rd10;
	add.s64 	%rd1, %rd18, %rd12;
	setp.lt.s32	%p8, %r2, 1;
	@%p8 bra 	BB0_19;

	ld.global.v2.f64 	{%fd48, %fd49}, [%rd1];
	mov.f64 	%fd50, 0d7FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd50;
	}
	ld.const.v2.f64 	{%fd51, %fd52}, [randPhase];
	mov.u32 	%r92, 0;
	cvta.to.global.u64 	%rd19, %rd3;
	cvta.to.global.u64 	%rd22, %rd4;
	cvta.to.global.u64 	%rd24, %rd5;
	cvta.to.global.u64 	%rd36, %rd6;
	cvta.to.global.u64 	%rd43, %rd2;

BB0_3:
	mov.u32 	%r91, 0;
	add.s32 	%r6, %r3, %r92;
	mul.wide.s32 	%rd20, %r6, 16;
	add.s64 	%rd21, %rd19, %rd20;
	ld.global.v2.f64 	{%fd57, %fd58}, [%rd21];
	add.f64 	%fd61, %fd42, %fd57;
	add.f64 	%fd62, %fd43, %fd58;
	sub.f64 	%fd63, %fd61, %fd62;
	add.f64 	%fd64, %fd61, %fd62;
	add.f64 	%fd65, %fd61, %fd61;
	add.s64 	%rd23, %rd22, %rd20;
	ld.global.v2.f64 	{%fd66, %fd67}, [%rd23];
	add.f64 	%fd70, %fd44, %fd66;
	add.f64 	%fd71, %fd45, %fd67;
	sub.f64 	%fd72, %fd70, %fd71;
	add.f64 	%fd73, %fd70, %fd71;
	mul.f64 	%fd74, %fd72, %fd73;
	add.f64 	%fd75, %fd70, %fd70;
	mul.f64 	%fd76, %fd71, %fd75;
	fma.rn.f64 	%fd77, %fd63, %fd64, %fd74;
	fma.rn.f64 	%fd78, %fd62, %fd65, %fd76;
	add.s64 	%rd25, %rd24, %rd20;
	ld.global.v2.f64 	{%fd79, %fd80}, [%rd25];
	add.f64 	%fd83, %fd46, %fd79;
	add.f64 	%fd84, %fd47, %fd80;
	sub.f64 	%fd85, %fd83, %fd84;
	add.f64 	%fd86, %fd83, %fd84;
	add.f64 	%fd87, %fd83, %fd83;
	fma.rn.f64 	%fd88, %fd85, %fd86, %fd77;
	fma.rn.f64 	%fd11, %fd84, %fd87, %fd78;
	abs.f64 	%fd89, %fd88;
	abs.f64 	%fd90, %fd11;
	mov.b64 	 %rd26, %fd90;
	mov.b64 	 %rd27, %fd89;
	min.u64 	%rd28, %rd26, %rd27;
	mov.b64 	 %fd91, %rd28;
	max.u64 	%rd29, %rd27, %rd26;
	mov.b64 	 %fd92, %rd29;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r46}, %fd92;
	}
	and.b32  	%r47, %r46, -4194304;
	mov.u32 	%r48, 2144337920;
	sub.s32 	%r49, %r48, %r47;
	mov.b64 	%fd93, {%r91, %r49};
	mul.f64 	%fd94, %fd91, %fd93;
	mul.f64 	%fd95, %fd92, %fd93;
	mul.f64 	%fd96, %fd94, %fd94;
	fma.rn.f64 	%fd97, %fd95, %fd95, %fd96;
	mov.f64 	%fd98, 0d7FEFFFFFFFFFFFFF;
	min.f64 	%fd54, %fd97, %fd98;
	// inline asm
	rsqrt.approx.ftz.f64 %fd53, %fd54;
	// inline asm
	mul.rn.f64 	%fd99, %fd53, %fd53;
	neg.f64 	%fd100, %fd99;
	mov.f64 	%fd101, 0d3FF0000000000000;
	fma.rn.f64 	%fd102, %fd54, %fd100, %fd101;
	mov.f64 	%fd103, 0d3FE0000000000000;
	mov.f64 	%fd104, 0d3FD8000000000000;
	fma.rn.f64 	%fd105, %fd104, %fd102, %fd103;
	mul.rn.f64 	%fd106, %fd102, %fd53;
	fma.rn.f64 	%fd107, %fd105, %fd106, %fd53;
	mul.f64 	%fd108, %fd97, %fd107;
	add.s32 	%r50, %r47, 1048576;
	mov.b64 	%fd109, {%r91, %r50};
	mul.f64 	%fd110, %fd108, %fd109;
	setp.eq.f64	%p9, %fd91, 0d0000000000000000;
	selp.f64	%fd111, %fd92, %fd110, %p9;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r51}, %fd91;
	}
	setp.lt.u32	%p10, %r51, %r4;
	selp.f64	%fd112, %fd111, %fd91, %p10;
	sqrt.rn.f64 	%fd12, %fd112;
	add.f64 	%fd13, %fd88, %fd112;
	abs.f64 	%fd113, %fd13;
	mov.b64 	 %rd30, %fd113;
	min.u64 	%rd31, %rd26, %rd30;
	mov.b64 	 %fd14, %rd31;
	max.u64 	%rd32, %rd30, %rd26;
	mov.b64 	 %fd15, %rd32;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r52}, %fd15;
	}
	and.b32  	%r53, %r52, -4194304;
	sub.s32 	%r54, %r48, %r53;
	mov.b64 	%fd114, {%r91, %r54};
	mul.f64 	%fd115, %fd14, %fd114;
	mul.f64 	%fd116, %fd15, %fd114;
	mul.f64 	%fd117, %fd115, %fd115;
	fma.rn.f64 	%fd56, %fd116, %fd116, %fd117;
	// inline asm
	rsqrt.approx.ftz.f64 %fd55, %fd56;
	// inline asm
	mul.rn.f64 	%fd118, %fd55, %fd55;
	neg.f64 	%fd119, %fd118;
	fma.rn.f64 	%fd120, %fd56, %fd119, %fd101;
	fma.rn.f64 	%fd121, %fd104, %fd120, %fd103;
	mul.rn.f64 	%fd122, %fd120, %fd55;
	fma.rn.f64 	%fd123, %fd121, %fd122, %fd55;
	mul.f64 	%fd234, %fd114, %fd123;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r55}, %fd234;
	}
	setp.lt.u32	%p11, %r55, %r4;
	@%p11 bra 	BB0_8;

	abs.f64 	%fd124, %fd15;
	setp.gtu.f64	%p12, %fd124, 0d7FF0000000000000;
	@%p12 bra 	BB0_6;
	bra.uni 	BB0_5;

BB0_6:
	add.f64 	%fd233, %fd14, %fd15;
	bra.uni 	BB0_7;

BB0_5:
	setp.neu.f64	%p13, %fd15, 0d7FF0000000000000;
	selp.b32	%r56, %r4, 0, %p13;
	mov.u32 	%r57, 0;
	mov.b64 	%fd233, {%r57, %r56};

BB0_7:
	setp.eq.f64	%p14, %fd14, 0d7FF0000000000000;
	selp.f64	%fd234, 0d0000000000000000, %fd233, %p14;

BB0_8:
	mov.f64 	%fd231, 0d3FF0000000000000;
	mul.f64 	%fd125, %fd12, %fd234;
	mul.f64 	%fd22, %fd13, %fd125;
	mul.f64 	%fd23, %fd11, %fd125;
	mul.wide.s32 	%rd33, %r92, 8;
	mov.u64 	%rd34, lMixtureAlpha;
	add.s64 	%rd35, %rd34, %rd33;
	ld.const.f64 	%fd24, [%rd35];
	add.s64 	%rd38, %rd36, %rd20;
	ld.global.v2.f64 	{%fd126, %fd127}, [%rd38];
	add.f64 	%fd130, %fd48, %fd126;
	add.f64 	%fd131, %fd49, %fd127;
	add.f64 	%fd25, %fd130, %fd22;
	add.f64 	%fd236, %fd131, %fd23;
	mov.f64 	%fd132, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd134, %fd25, %fd133, %fd132;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7, %temp}, %fd134;
	}
	mov.f64 	%fd135, 0dC338000000000000;
	add.rn.f64 	%fd136, %fd134, %fd135;
	mov.f64 	%fd137, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd138, %fd136, %fd137, %fd25;
	mov.f64 	%fd139, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd140, %fd136, %fd139, %fd138;
	mov.f64 	%fd141, 0d3E928AF3FCA213EA;
	mov.f64 	%fd142, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd143, %fd142, %fd140, %fd141;
	mov.f64 	%fd144, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd145, %fd143, %fd140, %fd144;
	mov.f64 	%fd146, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd147, %fd145, %fd140, %fd146;
	mov.f64 	%fd148, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd149, %fd147, %fd140, %fd148;
	mov.f64 	%fd150, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd151, %fd149, %fd140, %fd150;
	mov.f64 	%fd152, 0d3F81111111122322;
	fma.rn.f64 	%fd153, %fd151, %fd140, %fd152;
	mov.f64 	%fd154, 0d3FA55555555502A1;
	fma.rn.f64 	%fd155, %fd153, %fd140, %fd154;
	mov.f64 	%fd156, 0d3FC5555555555511;
	fma.rn.f64 	%fd157, %fd155, %fd140, %fd156;
	mov.f64 	%fd158, 0d3FE000000000000B;
	fma.rn.f64 	%fd159, %fd157, %fd140, %fd158;
	fma.rn.f64 	%fd161, %fd159, %fd140, %fd231;
	fma.rn.f64 	%fd162, %fd161, %fd140, %fd231;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8, %temp}, %fd162;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9}, %fd162;
	}
	shl.b32 	%r58, %r7, 20;
	add.s32 	%r59, %r9, %r58;
	mov.b64 	%fd235, {%r8, %r59};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r60}, %fd25;
	}
	mov.b32 	 %f2, %r60;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p15, %f1, 0f4086232B;
	@%p15 bra 	BB0_11;

	setp.lt.f64	%p16, %fd25, 0d0000000000000000;
	add.f64 	%fd163, %fd25, 0d7FF0000000000000;
	selp.f64	%fd235, 0d0000000000000000, %fd163, %p16;
	setp.geu.f32	%p17, %f1, 0f40874800;
	@%p17 bra 	BB0_11;

	shr.u32 	%r61, %r7, 31;
	add.s32 	%r62, %r7, %r61;
	shr.s32 	%r63, %r62, 1;
	shl.b32 	%r64, %r63, 20;
	add.s32 	%r65, %r64, %r9;
	mov.b64 	%fd164, {%r8, %r65};
	sub.s32 	%r66, %r7, %r63;
	shl.b32 	%r67, %r66, 20;
	add.s32 	%r68, %r67, 1072693248;
	mov.u32 	%r69, 0;
	mov.b64 	%fd165, {%r69, %r68};
	mul.f64 	%fd235, %fd164, %fd165;

BB0_11:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r70}, %fd236;
	}
	and.b32  	%r71, %r70, 2147483647;
	setp.ne.s32	%p18, %r71, 2146435072;
	@%p18 bra 	BB0_14;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r72, %temp}, %fd236;
	}
	setp.ne.s32	%p19, %r72, 0;
	@%p19 bra 	BB0_14;

	mov.f64 	%fd166, 0d0000000000000000;
	mul.rn.f64 	%fd236, %fd236, %fd166;

BB0_14:
	mul.f64 	%fd167, %fd236, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r93, %fd167;
	add.u64 	%rd39, %SP, 0;
	add.u64 	%rd40, %SPL, 0;
	st.local.u32 	[%rd40], %r93;
	cvt.rn.f64.s32	%fd168, %r93;
	neg.f64 	%fd169, %fd168;
	mov.f64 	%fd170, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd171, %fd169, %fd170, %fd236;
	mov.f64 	%fd172, 0d3C91A62633145C00;
	fma.rn.f64 	%fd173, %fd169, %fd172, %fd171;
	mov.f64 	%fd174, 0d397B839A252049C0;
	fma.rn.f64 	%fd237, %fd169, %fd174, %fd173;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r73}, %fd236;
	}
	and.b32  	%r74, %r73, 2145386496;
	setp.lt.u32	%p20, %r74, 1105199104;
	@%p20 bra 	BB0_16;

	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd236;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd237, [retval0+0];
	
	//{
	}// Callseq End 0
	ld.local.u32 	%r93, [%rd40];

BB0_16:
	mov.f64 	%fd232, 0d3FF0000000000000;
	mul.rn.f64 	%fd175, %fd237, %fd237;
	mov.f64 	%fd176, 0d3E21EEA7C1EF8528;
	mov.f64 	%fd177, 0dBDA8FF8320FD8164;
	fma.rn.f64 	%fd178, %fd177, %fd175, %fd176;
	mov.f64 	%fd179, 0dBE927E4F8E06E6D9;
	fma.rn.f64 	%fd180, %fd178, %fd175, %fd179;
	mov.f64 	%fd181, 0d3EFA01A019DDBCE9;
	fma.rn.f64 	%fd182, %fd180, %fd175, %fd181;
	mov.f64 	%fd183, 0dBF56C16C16C15D47;
	fma.rn.f64 	%fd184, %fd182, %fd175, %fd183;
	mov.f64 	%fd185, 0d3FA5555555555551;
	fma.rn.f64 	%fd186, %fd184, %fd175, %fd185;
	mov.f64 	%fd187, 0dBFE0000000000000;
	fma.rn.f64 	%fd188, %fd186, %fd175, %fd187;
	fma.rn.f64 	%fd190, %fd188, %fd175, %fd232;
	mov.f64 	%fd191, 0dBE5AE5F12CB0D246;
	mov.f64 	%fd192, 0d3DE5DB65F9785EBA;
	fma.rn.f64 	%fd193, %fd192, %fd175, %fd191;
	mov.f64 	%fd194, 0d3EC71DE369ACE392;
	fma.rn.f64 	%fd195, %fd193, %fd175, %fd194;
	mov.f64 	%fd196, 0dBF2A01A019DB62A1;
	fma.rn.f64 	%fd197, %fd195, %fd175, %fd196;
	mov.f64 	%fd198, 0d3F81111111110818;
	fma.rn.f64 	%fd199, %fd197, %fd175, %fd198;
	mov.f64 	%fd200, 0dBFC5555555555554;
	fma.rn.f64 	%fd201, %fd199, %fd175, %fd200;
	mov.f64 	%fd202, 0d0000000000000000;
	fma.rn.f64 	%fd203, %fd201, %fd175, %fd202;
	fma.rn.f64 	%fd204, %fd203, %fd237, %fd237;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r75}, %fd204;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r76, %temp}, %fd204;
	}
	xor.b32  	%r77, %r75, -2147483648;
	mov.b64 	%fd205, {%r76, %r77};
	and.b32  	%r78, %r93, 1;
	setp.eq.b32	%p21, %r78, 1;
	not.pred 	%p22, %p21;
	selp.f64	%fd238, %fd204, %fd190, %p22;
	selp.f64	%fd239, %fd190, %fd205, %p22;
	and.b32  	%r79, %r93, 2;
	setp.eq.s32	%p23, %r79, 0;
	@%p23 bra 	BB0_18;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r80}, %fd238;
	}
	xor.b32  	%r81, %r80, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r82, %temp}, %fd238;
	}
	mov.b64 	%fd238, {%r82, %r81};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r83}, %fd239;
	}
	xor.b32  	%r84, %r83, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r85, %temp}, %fd239;
	}
	mov.b64 	%fd239, {%r85, %r84};

BB0_18:
	ld.const.u32 	%r90, [lDim];
	mul.f64 	%fd206, %fd24, %fd51;
	mul.f64 	%fd207, %fd24, %fd52;
	mul.f64 	%fd208, %fd23, %fd23;
	fma.rn.f64 	%fd209, %fd22, %fd22, %fd208;
	rcp.rn.f64 	%fd210, %fd209;
	mul.f64 	%fd211, %fd235, %fd238;
	mul.f64 	%fd212, %fd23, %fd211;
	mul.f64 	%fd213, %fd235, %fd239;
	fma.rn.f64 	%fd214, %fd213, %fd22, %fd212;
	mul.f64 	%fd215, %fd210, %fd214;
	mul.f64 	%fd216, %fd23, %fd213;
	neg.f64 	%fd217, %fd216;
	fma.rn.f64 	%fd218, %fd211, %fd22, %fd217;
	mul.f64 	%fd219, %fd210, %fd218;
	mul.f64 	%fd220, %fd207, %fd219;
	neg.f64 	%fd221, %fd220;
	fma.rn.f64 	%fd222, %fd206, %fd215, %fd221;
	mul.f64 	%fd223, %fd207, %fd215;
	fma.rn.f64 	%fd224, %fd206, %fd219, %fd223;
	mul.wide.s32 	%rd44, %r1, 16;
	add.s64 	%rd45, %rd43, %rd44;
	ld.global.v2.f64 	{%fd225, %fd226}, [%rd45];
	add.f64 	%fd229, %fd224, %fd226;
	add.f64 	%fd230, %fd222, %fd225;
	st.global.v2.f64 	[%rd45], {%fd230, %fd229};
	add.s32 	%r92, %r92, 1;
	setp.lt.s32	%p24, %r92, %r90;
	@%p24 bra 	BB0_3;

BB0_19:
	ret;
}

.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<42>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<101>;


	mov.u64 	%SPL, __local_depot1;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd37, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd1, %SPL, 0;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	and.b32  	%r40, %r1, -2147483648;
	shr.u32 	%r3, %r1, 20;
	bfe.u32 	%r4, %r1, 20, 11;
	setp.eq.s32	%p1, %r4, 2047;
	@%p1 bra 	BB1_13;

	add.s32 	%r15, %r4, -1024;
	shr.u32 	%r16, %r15, 6;
	mov.u32 	%r17, 15;
	sub.s32 	%r5, %r17, %r16;
	mov.u32 	%r18, 19;
	sub.s32 	%r19, %r18, %r16;
	mov.u32 	%r20, 18;
	min.s32 	%r6, %r20, %r19;
	mov.u64 	%rd94, 0;
	setp.ge.s32	%p2, %r5, %r6;
	mov.u64 	%rd93, %rd1;
	@%p2 bra 	BB1_4;

	bfe.u32 	%r21, %r1, 20, 11;
	add.s32 	%r22, %r21, -1024;
	shr.u32 	%r23, %r22, 6;
	sub.s32 	%r25, %r17, %r23;
	mul.wide.s32 	%rd41, %r25, 8;
	mov.u64 	%rd42, __cudart_i2opi_d;
	add.s64 	%rd89, %rd42, %rd41;
	mov.b64 	 %rd43, %fd4;
	shl.b64 	%rd44, %rd43, 11;
	or.b64  	%rd5, %rd44, -9223372036854775808;
	mov.u64 	%rd94, 0;
	mov.u64 	%rd93, %rd1;
	mov.u64 	%rd91, %rd1;
	mov.u32 	%r39, %r5;

BB1_3:
	.pragma "nounroll";
	ld.const.u64 	%rd47, [%rd89];
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd47;    
	mov.b64         {blo,bhi}, %rd5;    
	mov.b64         {clo,chi}, %rd94;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd45, {r0,r1};      
	mov.b64         %rd94, {r2,r3};      
	}
	// inline asm
	st.local.u64 	[%rd91], %rd45;
	add.s32 	%r39, %r39, 1;
	sub.s32 	%r26, %r39, %r5;
	mul.wide.s32 	%rd50, %r26, 8;
	add.s64 	%rd91, %rd1, %rd50;
	add.s64 	%rd93, %rd93, 8;
	add.s64 	%rd89, %rd89, 8;
	setp.lt.s32	%p3, %r39, %r6;
	@%p3 bra 	BB1_3;

BB1_4:
	st.local.u64 	[%rd93], %rd94;
	ld.local.u64 	%rd95, [%rd1+16];
	ld.local.u64 	%rd96, [%rd1+24];
	and.b32  	%r9, %r3, 63;
	setp.eq.s32	%p4, %r9, 0;
	@%p4 bra 	BB1_6;

	mov.u32 	%r27, 64;
	sub.s32 	%r28, %r27, %r9;
	shl.b64 	%rd51, %rd96, %r9;
	shr.u64 	%rd52, %rd95, %r28;
	or.b64  	%rd96, %rd51, %rd52;
	shl.b64 	%rd53, %rd95, %r9;
	ld.local.u64 	%rd54, [%rd1+8];
	shr.u64 	%rd55, %rd54, %r28;
	or.b64  	%rd95, %rd55, %rd53;

BB1_6:
	shr.u64 	%rd56, %rd96, 62;
	cvt.u32.u64	%r29, %rd56;
	shr.u64 	%rd57, %rd95, 62;
	shl.b64 	%rd58, %rd96, 2;
	or.b64  	%rd98, %rd58, %rd57;
	shl.b64 	%rd97, %rd95, 2;
	shr.u64 	%rd59, %rd96, 61;
	cvt.u32.u64	%r30, %rd59;
	and.b32  	%r31, %r30, 1;
	add.s32 	%r32, %r31, %r29;
	neg.s32 	%r33, %r32;
	setp.eq.s32	%p5, %r40, 0;
	selp.b32	%r34, %r32, %r33, %p5;
	cvta.to.local.u64 	%rd60, %rd37;
	st.local.u32 	[%rd60], %r34;
	setp.eq.s32	%p6, %r31, 0;
	@%p6 bra 	BB1_8;

	mov.u64 	%rd64, 0;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd64;
	mov.b64         {a2,a3}, %rd64;
	mov.b64         {b0,b1}, %rd97;
	mov.b64         {b2,b3}, %rd98;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd97, {r0,r1};
	mov.b64         %rd98, {r2,r3};
	}
	// inline asm
	xor.b32  	%r40, %r40, -2147483648;

BB1_8:
	clz.b64 	%r41, %rd98;
	setp.eq.s32	%p7, %r41, 0;
	@%p7 bra 	BB1_10;

	shl.b64 	%rd67, %rd98, %r41;
	mov.u32 	%r35, 64;
	sub.s32 	%r36, %r35, %r41;
	shr.u64 	%rd68, %rd97, %r36;
	or.b64  	%rd98, %rd68, %rd67;

BB1_10:
	mov.u64 	%rd72, -3958705157555305931;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd98;   
	mov.b64         {blo,bhi}, %rd72;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd69, {r0,r1};     
	mov.b64         %rd100, {r2,r3};     
	}
	// inline asm
	setp.lt.s64	%p8, %rd100, 1;
	@%p8 bra 	BB1_12;

	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd69;
	mov.b64         {a2,a3}, %rd100;
	mov.b64         {b0,b1}, %rd69;
	mov.b64         {b2,b3}, %rd100;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd73, {r0,r1};
	mov.b64         %rd100, {r2,r3};
	}
	// inline asm
	add.s32 	%r41, %r41, 1;

BB1_12:
	cvt.u64.u32	%rd79, %r40;
	shl.b64 	%rd80, %rd79, 32;
	mov.u32 	%r37, 1022;
	sub.s32 	%r38, %r37, %r41;
	cvt.u64.u32	%rd81, %r38;
	shl.b64 	%rd82, %rd81, 52;
	add.s64 	%rd83, %rd100, 1;
	shr.u64 	%rd84, %rd83, 10;
	add.s64 	%rd85, %rd84, 1;
	shr.u64 	%rd86, %rd85, 1;
	add.s64 	%rd87, %rd86, %rd82;
	or.b64  	%rd88, %rd87, %rd80;
	mov.b64 	 %fd4, %rd88;

BB1_13:
	st.param.f64	[func_retval0+0], %fd4;
	ret;
}


