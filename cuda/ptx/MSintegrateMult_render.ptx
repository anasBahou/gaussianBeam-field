//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_60
.address_size 64

	// .globl	_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4_
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.const .align 8 .b8 box_min[24];
.const .align 8 .b8 box_max[24];
.const .align 8 .f64 sigt;
.const .align 4 .u32 dirDimNum;
.const .align 4 .b8 uDimProd[20];
.const .align 4 .b8 lDim[20];
.const .align 4 .b8 vDim[20];
.const .align 4 .u32 mixturesNum;
.const .align 8 .b8 lMixtureAlpha[256];
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4_(
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_0,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_1,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_2,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_3,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_4,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_5,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_6,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_7,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_8,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_9,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_10,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_11,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_12,
	.param .u64 _Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_13
)
{
	.local .align 4 .b8 	__local_depot0[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<29>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<112>;
	.reg .f64 	%fd<285>;
	.reg .b64 	%rd<85>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd28, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_0];
	ld.param.u64 	%rd29, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_1];
	ld.param.u64 	%rd30, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_2];
	ld.param.u64 	%rd31, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_3];
	ld.param.u64 	%rd32, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_4];
	ld.param.u64 	%rd33, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_5];
	ld.param.u64 	%rd34, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_6];
	ld.param.u64 	%rd35, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_7];
	ld.param.u64 	%rd36, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_8];
	ld.param.u64 	%rd37, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_9];
	ld.param.u64 	%rd38, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_10];
	ld.param.u64 	%rd39, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_11];
	ld.param.u64 	%rd40, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_12];
	ld.param.u64 	%rd41, [_Z22MSintegrateMult_renderP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_13];
	add.u64 	%rd1, %SPL, 0;
	add.u64 	%rd2, %SPL, 4;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %ctaid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r1, %r21, %r22, %r23;
	ld.const.u32 	%r24, [uDimProd+16];
	setp.ge.s32	%p1, %r1, %r24;
	@%p1 bra 	BB0_29;

	cvta.to.global.u64 	%rd44, %rd33;
	ld.const.u32 	%r25, [uDimProd+12];
	div.s32 	%r2, %r1, %r25;
	st.local.u32 	[%rd2+16], %r2;
	mul.lo.s32 	%r26, %r25, %r2;
	sub.s32 	%r27, %r1, %r26;
	ld.const.u32 	%r28, [uDimProd+8];
	div.s32 	%r3, %r27, %r28;
	st.local.u32 	[%rd2+12], %r3;
	mul.lo.s32 	%r29, %r28, %r3;
	sub.s32 	%r30, %r27, %r29;
	ld.const.u32 	%r31, [uDimProd+4];
	div.s32 	%r4, %r30, %r31;
	st.local.u32 	[%rd2+8], %r4;
	mul.lo.s32 	%r5, %r31, %r4;
	sub.s32 	%r32, %r30, %r5;
	ld.const.u32 	%r6, [uDimProd];
	div.s32 	%r7, %r32, %r6;
	st.local.u32 	[%rd2+4], %r7;
	rem.s32 	%r8, %r1, %r6;
	st.local.u32 	[%rd2], %r8;
	cvt.s64.s32	%rd3, %r2;
	add.s64 	%rd45, %rd44, %rd3;
	ld.global.u8 	%rs1, [%rd45];
	setp.eq.s16	%p2, %rs1, 0;
	@%p2 bra 	BB0_29;

	cvta.to.global.u64 	%rd46, %rd31;
	cvta.to.global.u64 	%rd47, %rd30;
	cvta.to.global.u64 	%rd48, %rd29;
	ld.const.u32 	%r33, [lDim+4];
	setp.gt.s32	%p3, %r33, 1;
	selp.b32	%r34, %r8, 0, %p3;
	ld.const.u32 	%r35, [lDim+8];
	setp.gt.s32	%p4, %r35, 1;
	selp.b32	%r36, %r33, 0, %p4;
	mad.lo.s32 	%r37, %r36, %r7, %r34;
	mul.lo.s32 	%r38, %r35, %r33;
	ld.const.u32 	%r39, [lDim+12];
	setp.gt.s32	%p5, %r39, 1;
	selp.b32	%r40, %r38, 0, %p5;
	mad.lo.s32 	%r41, %r40, %r4, %r37;
	mul.lo.s32 	%r42, %r38, %r39;
	mad.lo.s32 	%r43, %r42, %r3, %r41;
	ld.const.u32 	%r44, [lDim+16];
	mul.lo.s32 	%r45, %r42, %r44;
	mad.lo.s32 	%r46, %r45, %r2, %r43;
	mov.u64 	%rd49, vDim;
	ld.const.u32 	%r47, [vDim+4];
	setp.gt.s32	%p6, %r47, 1;
	selp.b32	%r48, %r8, 0, %p6;
	ld.const.u32 	%r49, [vDim+8];
	setp.gt.s32	%p7, %r49, 1;
	selp.b32	%r50, %r47, 0, %p7;
	mad.lo.s32 	%r51, %r50, %r7, %r48;
	mul.lo.s32 	%r52, %r49, %r47;
	ld.const.u32 	%r53, [vDim+12];
	setp.gt.s32	%p8, %r53, 1;
	selp.b32	%r54, %r52, 0, %p8;
	mad.lo.s32 	%r55, %r54, %r4, %r51;
	mul.lo.s32 	%r56, %r52, %r53;
	mad.lo.s32 	%r9, %r56, %r3, %r55;
	ld.const.u32 	%r57, [dirDimNum];
	add.s32 	%r58, %r57, -2;
	mul.wide.s32 	%rd50, %r58, 4;
	add.s64 	%rd51, %rd2, %rd50;
	add.s32 	%r59, %r57, -1;
	mul.wide.s32 	%rd52, %r59, 4;
	add.s64 	%rd53, %rd49, %rd52;
	ld.const.u32 	%r60, [%rd53];
	ld.local.u32 	%r61, [%rd51];
	mad.lo.s32 	%r62, %r3, %r60, %r61;
	mad.lo.s32 	%r63, %r6, %r7, %r8;
	add.s32 	%r10, %r63, %r5;
	mul.lo.s32 	%r64, %r62, 3;
	mul.wide.s32 	%rd54, %r64, 8;
	add.s64 	%rd4, %rd47, %rd54;
	mul.lo.s32 	%r65, %r2, 3;
	mul.wide.s32 	%rd55, %r65, 8;
	add.s64 	%rd5, %rd46, %rd55;
	mul.wide.s32 	%rd56, %r46, 16;
	add.s64 	%rd57, %rd48, %rd56;
	ld.global.v2.f64 	{%fd76, %fd77}, [%rd57];
	ld.global.f64 	%fd3, [%rd4];
	setp.gtu.f64	%p9, %fd3, 0d0000000000000000;
	@%p9 bra 	BB0_4;
	bra.uni 	BB0_3;

BB0_4:
	ld.const.f64 	%fd270, [box_max];
	ld.global.f64 	%fd269, [%rd5];
	mov.f64 	%fd271, %fd269;
	bra.uni 	BB0_5;

BB0_3:
	ld.global.f64 	%fd269, [%rd5];
	ld.const.f64 	%fd271, [box_min];
	mov.f64 	%fd270, %fd269;

BB0_5:
	abs.f64 	%fd11, %fd3;
	ld.global.f64 	%fd12, [%rd4+8];
	setp.gtu.f64	%p10, %fd12, 0d0000000000000000;
	@%p10 bra 	BB0_7;
	bra.uni 	BB0_6;

BB0_7:
	ld.const.f64 	%fd273, [box_max+8];
	ld.global.f64 	%fd272, [%rd5+8];
	mov.f64 	%fd274, %fd272;
	bra.uni 	BB0_8;

BB0_6:
	ld.global.f64 	%fd272, [%rd5+8];
	ld.const.f64 	%fd274, [box_min+8];
	mov.f64 	%fd273, %fd272;

BB0_8:
	abs.f64 	%fd20, %fd12;
	ld.global.f64 	%fd21, [%rd4+16];
	setp.gtu.f64	%p11, %fd21, 0d0000000000000000;
	sub.f64 	%fd78, %fd270, %fd271;
	div.rn.f64 	%fd22, %fd78, %fd11;
	@%p11 bra 	BB0_10;
	bra.uni 	BB0_9;

BB0_10:
	ld.const.f64 	%fd276, [box_max+16];
	ld.global.f64 	%fd275, [%rd5+16];
	mov.f64 	%fd277, %fd275;
	bra.uni 	BB0_11;

BB0_9:
	ld.global.f64 	%fd275, [%rd5+16];
	ld.const.f64 	%fd277, [box_min+16];
	mov.f64 	%fd276, %fd275;

BB0_11:
	cvta.to.global.u64 	%rd6, %rd28;
	cvta.to.global.u64 	%rd7, %rd32;
	cvta.to.global.u64 	%rd8, %rd40;
	cvta.to.global.u64 	%rd9, %rd39;
	cvta.to.global.u64 	%rd10, %rd38;
	cvta.to.global.u64 	%rd58, %rd37;
	cvta.to.global.u64 	%rd59, %rd36;
	cvta.to.global.u64 	%rd60, %rd35;
	cvta.to.global.u64 	%rd61, %rd34;
	abs.f64 	%fd79, %fd21;
	sub.f64 	%fd80, %fd276, %fd277;
	div.rn.f64 	%fd81, %fd80, %fd79;
	sub.f64 	%fd82, %fd273, %fd274;
	div.rn.f64 	%fd83, %fd82, %fd20;
	min.f64 	%fd84, %fd22, %fd83;
	min.f64 	%fd85, %fd84, %fd81;
	abs.f64 	%fd32, %fd85;
	mul.wide.s32 	%rd62, %r9, 16;
	add.s64 	%rd63, %rd61, %rd62;
	ld.global.v2.f64 	{%fd86, %fd87}, [%rd63];
	mul.f64 	%fd89, %fd269, 0d401921FB54442D18;
	sub.f64 	%fd34, %fd87, %fd89;
	add.s64 	%rd64, %rd60, %rd62;
	ld.global.v2.f64 	{%fd90, %fd91}, [%rd64];
	mul.f64 	%fd93, %fd272, 0d401921FB54442D18;
	sub.f64 	%fd36, %fd91, %fd93;
	add.s64 	%rd65, %rd59, %rd62;
	ld.global.v2.f64 	{%fd94, %fd95}, [%rd65];
	mul.f64 	%fd97, %fd275, 0d401921FB54442D18;
	sub.f64 	%fd38, %fd95, %fd97;
	add.s64 	%rd11, %rd58, %rd62;
	ld.const.u32 	%r11, [mixturesNum];
	setp.lt.s32	%p12, %r11, 1;
	@%p12 bra 	BB0_29;

	ld.global.v2.f64 	{%fd98, %fd99}, [%rd11];
	ld.const.f64 	%fd100, [sigt];
	cvt.u32.u64	%r67, %rd3;
	mov.f64 	%fd101, 0d7FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12}, %fd101;
	}
	mul.wide.s32 	%rd67, %r10, 16;
	add.s64 	%rd12, %rd6, %rd67;
	add.s64 	%rd13, %rd12, 8;
	mul.lo.s32 	%r68, %r11, %r67;
	mul.wide.s32 	%rd68, %r68, 8;
	add.s64 	%rd82, %rd8, %rd68;
	add.s64 	%rd81, %rd9, %rd68;
	add.s64 	%rd80, %rd10, %rd68;
	cvta.to.global.u64 	%rd84, %rd41;
	mul.f64 	%fd102, %fd32, %fd100;
	mov.u32 	%r66, 0;
	sub.f64 	%fd39, %fd98, %fd102;
	mov.u64 	%rd83, lMixtureAlpha;
	mov.u32 	%r110, %r66;

BB0_13:
	ld.global.f64 	%fd108, [%rd80];
	add.f64 	%fd109, %fd86, %fd108;
	sub.f64 	%fd110, %fd109, %fd34;
	add.f64 	%fd111, %fd34, %fd109;
	add.f64 	%fd112, %fd109, %fd109;
	ld.global.f64 	%fd113, [%rd81];
	add.f64 	%fd114, %fd90, %fd113;
	sub.f64 	%fd115, %fd114, %fd36;
	add.f64 	%fd116, %fd36, %fd114;
	mul.f64 	%fd117, %fd115, %fd116;
	add.f64 	%fd118, %fd114, %fd114;
	mul.f64 	%fd119, %fd36, %fd118;
	fma.rn.f64 	%fd120, %fd110, %fd111, %fd117;
	fma.rn.f64 	%fd121, %fd34, %fd112, %fd119;
	ld.global.f64 	%fd122, [%rd82];
	add.f64 	%fd123, %fd94, %fd122;
	sub.f64 	%fd124, %fd123, %fd38;
	add.f64 	%fd125, %fd38, %fd123;
	add.f64 	%fd126, %fd123, %fd123;
	fma.rn.f64 	%fd127, %fd124, %fd125, %fd120;
	fma.rn.f64 	%fd41, %fd38, %fd126, %fd121;
	abs.f64 	%fd128, %fd127;
	abs.f64 	%fd129, %fd41;
	mov.b64 	 %rd69, %fd129;
	mov.b64 	 %rd70, %fd128;
	min.u64 	%rd71, %rd69, %rd70;
	mov.b64 	 %fd130, %rd71;
	max.u64 	%rd72, %rd70, %rd69;
	mov.b64 	 %fd131, %rd72;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r69}, %fd131;
	}
	and.b32  	%r70, %r69, -4194304;
	mov.u32 	%r71, 2144337920;
	sub.s32 	%r72, %r71, %r70;
	mov.b64 	%fd132, {%r66, %r72};
	mul.f64 	%fd133, %fd130, %fd132;
	mul.f64 	%fd134, %fd131, %fd132;
	mul.f64 	%fd135, %fd133, %fd133;
	fma.rn.f64 	%fd136, %fd134, %fd134, %fd135;
	mov.f64 	%fd137, 0d7FEFFFFFFFFFFFFF;
	min.f64 	%fd105, %fd136, %fd137;
	// inline asm
	rsqrt.approx.ftz.f64 %fd104, %fd105;
	// inline asm
	mul.rn.f64 	%fd138, %fd104, %fd104;
	neg.f64 	%fd139, %fd138;
	mov.f64 	%fd140, 0d3FF0000000000000;
	fma.rn.f64 	%fd141, %fd105, %fd139, %fd140;
	mov.f64 	%fd142, 0d3FE0000000000000;
	mov.f64 	%fd143, 0d3FD8000000000000;
	fma.rn.f64 	%fd144, %fd143, %fd141, %fd142;
	mul.rn.f64 	%fd145, %fd141, %fd104;
	fma.rn.f64 	%fd146, %fd144, %fd145, %fd104;
	mul.f64 	%fd147, %fd136, %fd146;
	add.s32 	%r74, %r70, 1048576;
	mov.b64 	%fd148, {%r66, %r74};
	mul.f64 	%fd149, %fd147, %fd148;
	setp.eq.f64	%p13, %fd130, 0d0000000000000000;
	selp.f64	%fd150, %fd131, %fd149, %p13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r75}, %fd130;
	}
	setp.lt.u32	%p14, %r75, %r12;
	selp.f64	%fd151, %fd150, %fd130, %p14;
	sqrt.rn.f64 	%fd42, %fd151;
	add.f64 	%fd43, %fd127, %fd151;
	abs.f64 	%fd152, %fd43;
	mov.b64 	 %rd73, %fd152;
	min.u64 	%rd74, %rd69, %rd73;
	mov.b64 	 %fd44, %rd74;
	max.u64 	%rd75, %rd73, %rd69;
	mov.b64 	 %fd45, %rd75;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r76}, %fd45;
	}
	and.b32  	%r77, %r76, -4194304;
	sub.s32 	%r78, %r71, %r77;
	mov.b64 	%fd153, {%r66, %r78};
	mul.f64 	%fd154, %fd44, %fd153;
	mul.f64 	%fd155, %fd45, %fd153;
	mul.f64 	%fd156, %fd154, %fd154;
	fma.rn.f64 	%fd107, %fd155, %fd155, %fd156;
	// inline asm
	rsqrt.approx.ftz.f64 %fd106, %fd107;
	// inline asm
	mul.rn.f64 	%fd157, %fd106, %fd106;
	neg.f64 	%fd158, %fd157;
	fma.rn.f64 	%fd159, %fd107, %fd158, %fd140;
	fma.rn.f64 	%fd160, %fd143, %fd159, %fd142;
	mul.rn.f64 	%fd161, %fd159, %fd106;
	fma.rn.f64 	%fd162, %fd160, %fd161, %fd106;
	mul.f64 	%fd279, %fd153, %fd162;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r79}, %fd279;
	}
	setp.lt.u32	%p15, %r79, %r12;
	@%p15 bra 	BB0_18;

	abs.f64 	%fd163, %fd45;
	setp.gtu.f64	%p16, %fd163, 0d7FF0000000000000;
	@%p16 bra 	BB0_16;
	bra.uni 	BB0_15;

BB0_16:
	add.f64 	%fd278, %fd44, %fd45;
	bra.uni 	BB0_17;

BB0_15:
	setp.neu.f64	%p17, %fd45, 0d7FF0000000000000;
	selp.b32	%r80, %r12, 0, %p17;
	mov.u32 	%r81, 0;
	mov.b64 	%fd278, {%r81, %r80};

BB0_17:
	setp.eq.f64	%p18, %fd44, 0d7FF0000000000000;
	selp.f64	%fd279, 0d0000000000000000, %fd278, %p18;

BB0_18:
	mov.f64 	%fd267, 0d3FF0000000000000;
	mul.f64 	%fd164, %fd42, %fd279;
	mul.f64 	%fd52, %fd43, %fd164;
	mul.f64 	%fd53, %fd41, %fd164;
	mul.wide.s32 	%rd76, %r2, 16;
	add.s64 	%rd77, %rd7, %rd76;
	ld.global.v2.f64 	{%fd165, %fd166}, [%rd77];
	ld.const.f64 	%fd56, [%rd83];
	ld.global.f64 	%fd167, [%rd84];
	add.f64 	%fd168, %fd39, %fd167;
	add.f64 	%fd57, %fd52, %fd168;
	add.f64 	%fd281, %fd99, %fd53;
	mov.f64 	%fd169, 0d4338000000000000;
	mov.f64 	%fd170, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd171, %fd57, %fd170, %fd169;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd171;
	}
	mov.f64 	%fd172, 0dC338000000000000;
	add.rn.f64 	%fd173, %fd171, %fd172;
	mov.f64 	%fd174, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd175, %fd173, %fd174, %fd57;
	mov.f64 	%fd176, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd177, %fd173, %fd176, %fd175;
	mov.f64 	%fd178, 0d3E928AF3FCA213EA;
	mov.f64 	%fd179, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd180, %fd179, %fd177, %fd178;
	mov.f64 	%fd181, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd182, %fd180, %fd177, %fd181;
	mov.f64 	%fd183, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd184, %fd182, %fd177, %fd183;
	mov.f64 	%fd185, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd186, %fd184, %fd177, %fd185;
	mov.f64 	%fd187, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd188, %fd186, %fd177, %fd187;
	mov.f64 	%fd189, 0d3F81111111122322;
	fma.rn.f64 	%fd190, %fd188, %fd177, %fd189;
	mov.f64 	%fd191, 0d3FA55555555502A1;
	fma.rn.f64 	%fd192, %fd190, %fd177, %fd191;
	mov.f64 	%fd193, 0d3FC5555555555511;
	fma.rn.f64 	%fd194, %fd192, %fd177, %fd193;
	mov.f64 	%fd195, 0d3FE000000000000B;
	fma.rn.f64 	%fd196, %fd194, %fd177, %fd195;
	fma.rn.f64 	%fd198, %fd196, %fd177, %fd267;
	fma.rn.f64 	%fd199, %fd198, %fd177, %fd267;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r15, %temp}, %fd199;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r16}, %fd199;
	}
	shl.b32 	%r82, %r14, 20;
	add.s32 	%r83, %r16, %r82;
	mov.b64 	%fd280, {%r15, %r83};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r84}, %fd57;
	}
	mov.b32 	 %f2, %r84;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p19, %f1, 0f4086232B;
	@%p19 bra 	BB0_21;

	setp.lt.f64	%p20, %fd57, 0d0000000000000000;
	add.f64 	%fd200, %fd57, 0d7FF0000000000000;
	selp.f64	%fd280, 0d0000000000000000, %fd200, %p20;
	setp.geu.f32	%p21, %f1, 0f40874800;
	@%p21 bra 	BB0_21;

	shr.u32 	%r85, %r14, 31;
	add.s32 	%r86, %r14, %r85;
	shr.s32 	%r87, %r86, 1;
	shl.b32 	%r88, %r87, 20;
	add.s32 	%r89, %r88, %r16;
	mov.b64 	%fd201, {%r15, %r89};
	sub.s32 	%r90, %r14, %r87;
	shl.b32 	%r91, %r90, 20;
	add.s32 	%r92, %r91, 1072693248;
	mov.u32 	%r93, 0;
	mov.b64 	%fd202, {%r93, %r92};
	mul.f64 	%fd280, %fd201, %fd202;

BB0_21:
	mul.f64 	%fd63, %fd56, %fd165;
	mul.f64 	%fd64, %fd56, %fd166;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r94}, %fd281;
	}
	and.b32  	%r95, %r94, 2147483647;
	setp.ne.s32	%p22, %r95, 2146435072;
	@%p22 bra 	BB0_24;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r96, %temp}, %fd281;
	}
	setp.ne.s32	%p23, %r96, 0;
	@%p23 bra 	BB0_24;

	mov.f64 	%fd203, 0d0000000000000000;
	mul.rn.f64 	%fd281, %fd281, %fd203;

BB0_24:
	mul.f64 	%fd204, %fd281, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r111, %fd204;
	st.local.u32 	[%rd1], %r111;
	cvt.rn.f64.s32	%fd205, %r111;
	neg.f64 	%fd206, %fd205;
	mov.f64 	%fd207, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd208, %fd206, %fd207, %fd281;
	mov.f64 	%fd209, 0d3C91A62633145C00;
	fma.rn.f64 	%fd210, %fd206, %fd209, %fd208;
	mov.f64 	%fd211, 0d397B839A252049C0;
	fma.rn.f64 	%fd282, %fd206, %fd211, %fd210;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r97}, %fd281;
	}
	and.b32  	%r98, %r97, 2145386496;
	setp.lt.u32	%p24, %r98, 1105199104;
	@%p24 bra 	BB0_26;

	add.u64 	%rd79, %SP, 0;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd281;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd79;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd282, [retval0+0];
	
	//{
	}// Callseq End 0
	ld.local.u32 	%r111, [%rd1];

BB0_26:
	mov.f64 	%fd268, 0d3FF0000000000000;
	mul.rn.f64 	%fd212, %fd282, %fd282;
	mov.f64 	%fd213, 0d3E21EEA7C1EF8528;
	mov.f64 	%fd214, 0dBDA8FF8320FD8164;
	fma.rn.f64 	%fd215, %fd214, %fd212, %fd213;
	mov.f64 	%fd216, 0dBE927E4F8E06E6D9;
	fma.rn.f64 	%fd217, %fd215, %fd212, %fd216;
	mov.f64 	%fd218, 0d3EFA01A019DDBCE9;
	fma.rn.f64 	%fd219, %fd217, %fd212, %fd218;
	mov.f64 	%fd220, 0dBF56C16C16C15D47;
	fma.rn.f64 	%fd221, %fd219, %fd212, %fd220;
	mov.f64 	%fd222, 0d3FA5555555555551;
	fma.rn.f64 	%fd223, %fd221, %fd212, %fd222;
	mov.f64 	%fd224, 0dBFE0000000000000;
	fma.rn.f64 	%fd225, %fd223, %fd212, %fd224;
	fma.rn.f64 	%fd227, %fd225, %fd212, %fd268;
	mov.f64 	%fd228, 0dBE5AE5F12CB0D246;
	mov.f64 	%fd229, 0d3DE5DB65F9785EBA;
	fma.rn.f64 	%fd230, %fd229, %fd212, %fd228;
	mov.f64 	%fd231, 0d3EC71DE369ACE392;
	fma.rn.f64 	%fd232, %fd230, %fd212, %fd231;
	mov.f64 	%fd233, 0dBF2A01A019DB62A1;
	fma.rn.f64 	%fd234, %fd232, %fd212, %fd233;
	mov.f64 	%fd235, 0d3F81111111110818;
	fma.rn.f64 	%fd236, %fd234, %fd212, %fd235;
	mov.f64 	%fd237, 0dBFC5555555555554;
	fma.rn.f64 	%fd238, %fd236, %fd212, %fd237;
	mov.f64 	%fd239, 0d0000000000000000;
	fma.rn.f64 	%fd240, %fd238, %fd212, %fd239;
	fma.rn.f64 	%fd241, %fd240, %fd282, %fd282;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r99}, %fd241;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r100, %temp}, %fd241;
	}
	xor.b32  	%r101, %r99, -2147483648;
	mov.b64 	%fd242, {%r100, %r101};
	and.b32  	%r102, %r111, 1;
	setp.eq.b32	%p25, %r102, 1;
	not.pred 	%p26, %p25;
	selp.f64	%fd283, %fd241, %fd227, %p26;
	selp.f64	%fd284, %fd227, %fd242, %p26;
	and.b32  	%r103, %r111, 2;
	setp.eq.s32	%p27, %r103, 0;
	@%p27 bra 	BB0_28;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r104}, %fd283;
	}
	xor.b32  	%r105, %r104, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r106, %temp}, %fd283;
	}
	mov.b64 	%fd283, {%r106, %r105};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r107}, %fd284;
	}
	xor.b32  	%r108, %r107, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r109, %temp}, %fd284;
	}
	mov.b64 	%fd284, {%r109, %r108};

BB0_28:
	mul.f64 	%fd243, %fd280, %fd283;
	mul.f64 	%fd244, %fd77, %fd243;
	neg.f64 	%fd245, %fd244;
	mul.f64 	%fd246, %fd280, %fd284;
	fma.rn.f64 	%fd247, %fd76, %fd246, %fd245;
	mul.f64 	%fd248, %fd77, %fd246;
	fma.rn.f64 	%fd249, %fd76, %fd243, %fd248;
	mul.f64 	%fd250, %fd53, %fd53;
	fma.rn.f64 	%fd251, %fd52, %fd52, %fd250;
	rcp.rn.f64 	%fd252, %fd251;
	mul.f64 	%fd253, %fd53, %fd249;
	fma.rn.f64 	%fd254, %fd247, %fd52, %fd253;
	mul.f64 	%fd255, %fd252, %fd254;
	mul.f64 	%fd256, %fd53, %fd247;
	neg.f64 	%fd257, %fd256;
	fma.rn.f64 	%fd258, %fd249, %fd52, %fd257;
	mul.f64 	%fd259, %fd252, %fd258;
	mul.f64 	%fd260, %fd64, %fd259;
	neg.f64 	%fd261, %fd260;
	fma.rn.f64 	%fd262, %fd63, %fd255, %fd261;
	mul.f64 	%fd263, %fd64, %fd255;
	fma.rn.f64 	%fd264, %fd63, %fd259, %fd263;
	atom.global.add.f64 	%fd265, [%rd12], %fd262;
	atom.global.add.f64 	%fd266, [%rd13], %fd264;
	add.s64 	%rd84, %rd84, 8;
	add.s64 	%rd83, %rd83, 8;
	add.s64 	%rd82, %rd82, 8;
	add.s64 	%rd81, %rd81, 8;
	add.s64 	%rd80, %rd80, 8;
	add.s32 	%r110, %r110, 1;
	setp.lt.s32	%p28, %r110, %r11;
	@%p28 bra 	BB0_13;

BB0_29:
	ret;
}

.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<42>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<101>;


	mov.u64 	%SPL, __local_depot1;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd37, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd1, %SPL, 0;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	and.b32  	%r40, %r1, -2147483648;
	shr.u32 	%r3, %r1, 20;
	bfe.u32 	%r4, %r1, 20, 11;
	setp.eq.s32	%p1, %r4, 2047;
	@%p1 bra 	BB1_13;

	add.s32 	%r15, %r4, -1024;
	shr.u32 	%r16, %r15, 6;
	mov.u32 	%r17, 15;
	sub.s32 	%r5, %r17, %r16;
	mov.u32 	%r18, 19;
	sub.s32 	%r19, %r18, %r16;
	mov.u32 	%r20, 18;
	min.s32 	%r6, %r20, %r19;
	mov.u64 	%rd94, 0;
	setp.ge.s32	%p2, %r5, %r6;
	mov.u64 	%rd93, %rd1;
	@%p2 bra 	BB1_4;

	bfe.u32 	%r21, %r1, 20, 11;
	add.s32 	%r22, %r21, -1024;
	shr.u32 	%r23, %r22, 6;
	sub.s32 	%r25, %r17, %r23;
	mul.wide.s32 	%rd41, %r25, 8;
	mov.u64 	%rd42, __cudart_i2opi_d;
	add.s64 	%rd89, %rd42, %rd41;
	mov.b64 	 %rd43, %fd4;
	shl.b64 	%rd44, %rd43, 11;
	or.b64  	%rd5, %rd44, -9223372036854775808;
	mov.u64 	%rd94, 0;
	mov.u64 	%rd93, %rd1;
	mov.u64 	%rd91, %rd1;
	mov.u32 	%r39, %r5;

BB1_3:
	.pragma "nounroll";
	ld.const.u64 	%rd47, [%rd89];
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd47;    
	mov.b64         {blo,bhi}, %rd5;    
	mov.b64         {clo,chi}, %rd94;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd45, {r0,r1};      
	mov.b64         %rd94, {r2,r3};      
	}
	// inline asm
	st.local.u64 	[%rd91], %rd45;
	add.s32 	%r39, %r39, 1;
	sub.s32 	%r26, %r39, %r5;
	mul.wide.s32 	%rd50, %r26, 8;
	add.s64 	%rd91, %rd1, %rd50;
	add.s64 	%rd93, %rd93, 8;
	add.s64 	%rd89, %rd89, 8;
	setp.lt.s32	%p3, %r39, %r6;
	@%p3 bra 	BB1_3;

BB1_4:
	st.local.u64 	[%rd93], %rd94;
	ld.local.u64 	%rd95, [%rd1+16];
	ld.local.u64 	%rd96, [%rd1+24];
	and.b32  	%r9, %r3, 63;
	setp.eq.s32	%p4, %r9, 0;
	@%p4 bra 	BB1_6;

	mov.u32 	%r27, 64;
	sub.s32 	%r28, %r27, %r9;
	shl.b64 	%rd51, %rd96, %r9;
	shr.u64 	%rd52, %rd95, %r28;
	or.b64  	%rd96, %rd51, %rd52;
	shl.b64 	%rd53, %rd95, %r9;
	ld.local.u64 	%rd54, [%rd1+8];
	shr.u64 	%rd55, %rd54, %r28;
	or.b64  	%rd95, %rd55, %rd53;

BB1_6:
	shr.u64 	%rd56, %rd96, 62;
	cvt.u32.u64	%r29, %rd56;
	shr.u64 	%rd57, %rd95, 62;
	shl.b64 	%rd58, %rd96, 2;
	or.b64  	%rd98, %rd58, %rd57;
	shl.b64 	%rd97, %rd95, 2;
	shr.u64 	%rd59, %rd96, 61;
	cvt.u32.u64	%r30, %rd59;
	and.b32  	%r31, %r30, 1;
	add.s32 	%r32, %r31, %r29;
	neg.s32 	%r33, %r32;
	setp.eq.s32	%p5, %r40, 0;
	selp.b32	%r34, %r32, %r33, %p5;
	cvta.to.local.u64 	%rd60, %rd37;
	st.local.u32 	[%rd60], %r34;
	setp.eq.s32	%p6, %r31, 0;
	@%p6 bra 	BB1_8;

	mov.u64 	%rd64, 0;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd64;
	mov.b64         {a2,a3}, %rd64;
	mov.b64         {b0,b1}, %rd97;
	mov.b64         {b2,b3}, %rd98;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd97, {r0,r1};
	mov.b64         %rd98, {r2,r3};
	}
	// inline asm
	xor.b32  	%r40, %r40, -2147483648;

BB1_8:
	clz.b64 	%r41, %rd98;
	setp.eq.s32	%p7, %r41, 0;
	@%p7 bra 	BB1_10;

	shl.b64 	%rd67, %rd98, %r41;
	mov.u32 	%r35, 64;
	sub.s32 	%r36, %r35, %r41;
	shr.u64 	%rd68, %rd97, %r36;
	or.b64  	%rd98, %rd68, %rd67;

BB1_10:
	mov.u64 	%rd72, -3958705157555305931;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd98;   
	mov.b64         {blo,bhi}, %rd72;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd69, {r0,r1};     
	mov.b64         %rd100, {r2,r3};     
	}
	// inline asm
	setp.lt.s64	%p8, %rd100, 1;
	@%p8 bra 	BB1_12;

	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd69;
	mov.b64         {a2,a3}, %rd100;
	mov.b64         {b0,b1}, %rd69;
	mov.b64         {b2,b3}, %rd100;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd73, {r0,r1};
	mov.b64         %rd100, {r2,r3};
	}
	// inline asm
	add.s32 	%r41, %r41, 1;

BB1_12:
	cvt.u64.u32	%rd79, %r40;
	shl.b64 	%rd80, %rd79, 32;
	mov.u32 	%r37, 1022;
	sub.s32 	%r38, %r37, %r41;
	cvt.u64.u32	%rd81, %r38;
	shl.b64 	%rd82, %rd81, 52;
	add.s64 	%rd83, %rd100, 1;
	shr.u64 	%rd84, %rd83, 10;
	add.s64 	%rd85, %rd84, 1;
	shr.u64 	%rd86, %rd85, 1;
	add.s64 	%rd87, %rd86, %rd82;
	or.b64  	%rd88, %rd87, %rd80;
	mov.b64 	 %fd4, %rd88;

BB1_13:
	st.param.f64	[func_retval0+0], %fd4;
	ret;
}


