//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4_
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.const .align 8 .b8 box_min[24];
.const .align 8 .b8 box_max[24];
.const .align 8 .f64 sigt;
.const .align 4 .u32 dirDimNum;
.const .align 4 .b8 uDimProd[16];
.const .align 4 .b8 lDim[16];
.const .align 4 .b8 vDim[16];
.const .align 4 .u32 mixturesNum;
.const .align 8 .b8 lMixtureAlpha[256];
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4_(
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_0,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_1,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_2,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_3,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_4,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_5,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_6,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_7,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_8,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_9,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_10,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_11,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_12,
	.param .u64 _Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_13
)
{
	.local .align 16 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<29>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<107>;
	.reg .f64 	%fd<288>;
	.reg .b64 	%rd<71>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd4, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_0];
	ld.param.u64 	%rd5, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_1];
	ld.param.u64 	%rd6, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_2];
	ld.param.u64 	%rd7, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_3];
	ld.param.u64 	%rd8, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_4];
	ld.param.u64 	%rd9, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_5];
	ld.param.u64 	%rd10, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_6];
	ld.param.u64 	%rd11, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_7];
	ld.param.u64 	%rd12, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_8];
	ld.param.u64 	%rd13, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_9];
	ld.param.u64 	%rd14, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_10];
	ld.param.u64 	%rd15, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_11];
	ld.param.u64 	%rd16, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_12];
	ld.param.u64 	%rd17, [_Z28MSintegrateMultMultiplePathsP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_13];
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %ctaid.x;
	mov.u32 	%r22, %tid.x;
	mad.lo.s32 	%r1, %r20, %r21, %r22;
	ld.const.u32 	%r23, [uDimProd+12];
	setp.ge.s32	%p1, %r1, %r23;
	@%p1 bra 	BB0_29;

	cvta.to.global.u64 	%rd18, %rd9;
	ld.const.u32 	%r24, [uDimProd+8];
	div.s32 	%r2, %r1, %r24;
	mul.lo.s32 	%r25, %r24, %r2;
	sub.s32 	%r26, %r1, %r25;
	ld.const.u32 	%r27, [uDimProd+4];
	div.s32 	%r3, %r26, %r27;
	mul.lo.s32 	%r28, %r27, %r3;
	sub.s32 	%r29, %r26, %r28;
	ld.const.u32 	%r30, [uDimProd];
	div.s32 	%r4, %r29, %r30;
	rem.s32 	%r5, %r1, %r30;
	add.u64 	%rd20, %SPL, 16;
	st.local.v4.u32 	[%rd20], {%r5, %r4, %r3, %r2};
	cvt.s64.s32	%rd1, %r2;
	add.s64 	%rd21, %rd18, %rd1;
	ld.global.u8 	%rs1, [%rd21];
	setp.eq.s16	%p2, %rs1, 0;
	@%p2 bra 	BB0_29;

	cvta.to.global.u64 	%rd22, %rd7;
	cvta.to.global.u64 	%rd23, %rd6;
	cvta.to.global.u64 	%rd24, %rd5;
	ld.const.u32 	%r31, [lDim];
	ld.const.u32 	%r32, [lDim+4];
	setp.gt.s32	%p3, %r32, 1;
	selp.b32	%r33, %r31, 0, %p3;
	mul.lo.s32 	%r34, %r33, %r5;
	mul.lo.s32 	%r35, %r32, %r31;
	ld.const.u32 	%r36, [lDim+8];
	setp.gt.s32	%p4, %r36, 1;
	selp.b32	%r37, %r35, 0, %p4;
	mad.lo.s32 	%r38, %r37, %r4, %r34;
	mul.lo.s32 	%r39, %r35, %r36;
	ld.const.u32 	%r40, [lDim+12];
	setp.gt.s32	%p5, %r40, 1;
	selp.b32	%r41, %r39, 0, %p5;
	mad.lo.s32 	%r42, %r41, %r3, %r38;
	mul.lo.s32 	%r43, %r39, %r40;
	mad.lo.s32 	%r44, %r43, %r2, %r42;
	ld.const.u32 	%r45, [vDim+4];
	setp.gt.s32	%p6, %r45, 1;
	selp.b32	%r46, %r5, 0, %p6;
	ld.const.u32 	%r47, [vDim+8];
	setp.gt.s32	%p7, %r47, 1;
	selp.b32	%r48, %r45, 0, %p7;
	mad.lo.s32 	%r49, %r48, %r4, %r46;
	mul.lo.s32 	%r50, %r47, %r45;
	ld.const.u32 	%r51, [vDim+12];
	setp.gt.s32	%p8, %r51, 1;
	selp.b32	%r52, %r50, 0, %p8;
	mad.lo.s32 	%r6, %r52, %r3, %r49;
	ld.const.u32 	%r53, [dirDimNum];
	mul.wide.s32 	%rd27, %r53, 4;
	add.s64 	%rd28, %rd27, %rd20;
	ld.local.u32 	%r54, [%rd28+-8];
	mul.lo.s32 	%r55, %r54, 3;
	mul.wide.s32 	%rd29, %r55, 8;
	add.s64 	%rd2, %rd23, %rd29;
	mul.lo.s32 	%r56, %r2, 3;
	mul.wide.s32 	%rd30, %r56, 8;
	add.s64 	%rd3, %rd22, %rd30;
	mul.wide.s32 	%rd31, %r44, 16;
	add.s64 	%rd32, %rd24, %rd31;
	ld.global.v2.f64 	{%fd74, %fd75}, [%rd32];
	ld.global.f64 	%fd3, [%rd2];
	setp.gtu.f64	%p9, %fd3, 0d0000000000000000;
	@%p9 bra 	BB0_4;
	bra.uni 	BB0_3;

BB0_4:
	ld.const.f64 	%fd273, [box_max];
	ld.global.f64 	%fd272, [%rd3];
	mov.f64 	%fd274, %fd272;
	bra.uni 	BB0_5;

BB0_3:
	ld.global.f64 	%fd272, [%rd3];
	ld.const.f64 	%fd274, [box_min];
	mov.f64 	%fd273, %fd272;

BB0_5:
	abs.f64 	%fd11, %fd3;
	ld.global.f64 	%fd12, [%rd2+8];
	setp.gtu.f64	%p10, %fd12, 0d0000000000000000;
	@%p10 bra 	BB0_7;
	bra.uni 	BB0_6;

BB0_7:
	ld.const.f64 	%fd276, [box_max+8];
	ld.global.f64 	%fd275, [%rd3+8];
	mov.f64 	%fd277, %fd275;
	bra.uni 	BB0_8;

BB0_6:
	ld.global.f64 	%fd275, [%rd3+8];
	ld.const.f64 	%fd277, [box_min+8];
	mov.f64 	%fd276, %fd275;

BB0_8:
	abs.f64 	%fd20, %fd12;
	ld.global.f64 	%fd21, [%rd2+16];
	setp.gtu.f64	%p11, %fd21, 0d0000000000000000;
	sub.f64 	%fd76, %fd273, %fd274;
	div.rn.f64 	%fd22, %fd76, %fd11;
	@%p11 bra 	BB0_10;
	bra.uni 	BB0_9;

BB0_10:
	ld.const.f64 	%fd279, [box_max+16];
	ld.global.f64 	%fd278, [%rd3+16];
	mov.f64 	%fd280, %fd278;
	bra.uni 	BB0_11;

BB0_9:
	ld.global.f64 	%fd278, [%rd3+16];
	ld.const.f64 	%fd280, [box_min+16];
	mov.f64 	%fd279, %fd278;

BB0_11:
	cvta.to.global.u64 	%rd33, %rd13;
	cvta.to.global.u64 	%rd34, %rd12;
	cvta.to.global.u64 	%rd35, %rd11;
	cvta.to.global.u64 	%rd36, %rd10;
	abs.f64 	%fd77, %fd21;
	sub.f64 	%fd78, %fd279, %fd280;
	div.rn.f64 	%fd79, %fd78, %fd77;
	sub.f64 	%fd80, %fd276, %fd277;
	div.rn.f64 	%fd81, %fd80, %fd20;
	min.f64 	%fd82, %fd22, %fd81;
	min.f64 	%fd83, %fd82, %fd79;
	mul.wide.s32 	%rd37, %r6, 16;
	add.s64 	%rd38, %rd36, %rd37;
	ld.global.v2.f64 	{%fd84, %fd85}, [%rd38];
	mul.f64 	%fd87, %fd272, 0d401921FB54442D18;
	sub.f64 	%fd31, %fd85, %fd87;
	add.s64 	%rd39, %rd35, %rd37;
	ld.global.v2.f64 	{%fd88, %fd89}, [%rd39];
	mul.f64 	%fd91, %fd275, 0d401921FB54442D18;
	sub.f64 	%fd33, %fd89, %fd91;
	add.s64 	%rd40, %rd34, %rd37;
	ld.global.v2.f64 	{%fd92, %fd93}, [%rd40];
	mul.f64 	%fd95, %fd278, 0d401921FB54442D18;
	sub.f64 	%fd35, %fd93, %fd95;
	add.s64 	%rd41, %rd33, %rd37;
	ld.global.v2.f64 	{%fd96, %fd97}, [%rd41];
	ld.const.f64 	%fd99, [sigt];
	mul.f64 	%fd100, %fd83, %fd99;
	sub.f64 	%fd37, %fd96, %fd100;
	ld.const.u32 	%r7, [mixturesNum];
	setp.lt.s32	%p12, %r7, 1;
	@%p12 bra 	BB0_29;

	mov.f64 	%fd101, 0d7FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd101;
	}
	cvt.u32.u64	%r58, %rd1;
	mul.lo.s32 	%r105, %r58, %r7;
	mov.u32 	%r57, 0;
	cvta.to.global.u64 	%rd42, %rd14;
	cvta.to.global.u64 	%rd45, %rd15;
	cvta.to.global.u64 	%rd47, %rd16;
	cvta.to.global.u64 	%rd59, %rd8;
	cvta.to.global.u64 	%rd62, %rd17;
	cvta.to.global.u64 	%rd68, %rd4;
	mov.u32 	%r104, %r57;

BB0_13:
	mul.wide.s32 	%rd43, %r105, 8;
	add.s64 	%rd44, %rd42, %rd43;
	ld.global.f64 	%fd106, [%rd44];
	add.f64 	%fd107, %fd84, %fd106;
	sub.f64 	%fd108, %fd107, %fd31;
	add.f64 	%fd109, %fd31, %fd107;
	add.f64 	%fd110, %fd107, %fd107;
	add.s64 	%rd46, %rd45, %rd43;
	ld.global.f64 	%fd111, [%rd46];
	add.f64 	%fd112, %fd88, %fd111;
	sub.f64 	%fd113, %fd112, %fd33;
	add.f64 	%fd114, %fd33, %fd112;
	mul.f64 	%fd115, %fd113, %fd114;
	add.f64 	%fd116, %fd112, %fd112;
	mul.f64 	%fd117, %fd33, %fd116;
	fma.rn.f64 	%fd118, %fd108, %fd109, %fd115;
	fma.rn.f64 	%fd119, %fd31, %fd110, %fd117;
	add.s64 	%rd48, %rd47, %rd43;
	ld.global.f64 	%fd120, [%rd48];
	add.f64 	%fd121, %fd92, %fd120;
	sub.f64 	%fd122, %fd121, %fd35;
	add.f64 	%fd123, %fd35, %fd121;
	add.f64 	%fd124, %fd121, %fd121;
	fma.rn.f64 	%fd125, %fd122, %fd123, %fd118;
	fma.rn.f64 	%fd38, %fd35, %fd124, %fd119;
	abs.f64 	%fd126, %fd125;
	abs.f64 	%fd127, %fd38;
	mov.b64 	 %rd49, %fd127;
	mov.b64 	 %rd50, %fd126;
	min.u64 	%rd51, %rd49, %rd50;
	mov.b64 	 %fd128, %rd51;
	max.u64 	%rd52, %rd50, %rd49;
	mov.b64 	 %fd129, %rd52;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r59}, %fd129;
	}
	and.b32  	%r60, %r59, -4194304;
	mov.u32 	%r61, 2144337920;
	sub.s32 	%r62, %r61, %r60;
	mov.b64 	%fd130, {%r57, %r62};
	mul.f64 	%fd131, %fd128, %fd130;
	mul.f64 	%fd132, %fd129, %fd130;
	mul.f64 	%fd133, %fd131, %fd131;
	fma.rn.f64 	%fd134, %fd132, %fd132, %fd133;
	mov.f64 	%fd135, 0d7FEFFFFFFFFFFFFF;
	min.f64 	%fd103, %fd134, %fd135;
	// inline asm
	rsqrt.approx.ftz.f64 %fd102, %fd103;
	// inline asm
	mul.rn.f64 	%fd136, %fd102, %fd102;
	neg.f64 	%fd137, %fd136;
	mov.f64 	%fd138, 0d3FF0000000000000;
	fma.rn.f64 	%fd139, %fd103, %fd137, %fd138;
	mov.f64 	%fd140, 0d3FE0000000000000;
	mov.f64 	%fd141, 0d3FD8000000000000;
	fma.rn.f64 	%fd142, %fd141, %fd139, %fd140;
	mul.rn.f64 	%fd143, %fd139, %fd102;
	fma.rn.f64 	%fd144, %fd142, %fd143, %fd102;
	mul.f64 	%fd145, %fd134, %fd144;
	add.s32 	%r64, %r60, 1048576;
	mov.b64 	%fd146, {%r57, %r64};
	mul.f64 	%fd147, %fd145, %fd146;
	setp.eq.f64	%p13, %fd128, 0d0000000000000000;
	selp.f64	%fd148, %fd129, %fd147, %p13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r65}, %fd128;
	}
	setp.lt.u32	%p14, %r65, %r8;
	selp.f64	%fd149, %fd148, %fd128, %p14;
	sqrt.rn.f64 	%fd39, %fd149;
	add.f64 	%fd40, %fd125, %fd149;
	abs.f64 	%fd150, %fd40;
	mov.b64 	 %rd53, %fd150;
	min.u64 	%rd54, %rd49, %rd53;
	mov.b64 	 %fd41, %rd54;
	max.u64 	%rd55, %rd53, %rd49;
	mov.b64 	 %fd42, %rd55;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r66}, %fd42;
	}
	and.b32  	%r67, %r66, -4194304;
	sub.s32 	%r68, %r61, %r67;
	mov.b64 	%fd151, {%r57, %r68};
	mul.f64 	%fd152, %fd41, %fd151;
	mul.f64 	%fd153, %fd42, %fd151;
	mul.f64 	%fd154, %fd152, %fd152;
	fma.rn.f64 	%fd105, %fd153, %fd153, %fd154;
	// inline asm
	rsqrt.approx.ftz.f64 %fd104, %fd105;
	// inline asm
	mul.rn.f64 	%fd155, %fd104, %fd104;
	neg.f64 	%fd156, %fd155;
	fma.rn.f64 	%fd157, %fd105, %fd156, %fd138;
	fma.rn.f64 	%fd158, %fd141, %fd157, %fd140;
	mul.rn.f64 	%fd159, %fd157, %fd104;
	fma.rn.f64 	%fd160, %fd158, %fd159, %fd104;
	mul.f64 	%fd282, %fd151, %fd160;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r69}, %fd282;
	}
	setp.lt.u32	%p15, %r69, %r8;
	@%p15 bra 	BB0_18;

	abs.f64 	%fd161, %fd42;
	setp.gtu.f64	%p16, %fd161, 0d7FF0000000000000;
	@%p16 bra 	BB0_16;
	bra.uni 	BB0_15;

BB0_16:
	add.f64 	%fd281, %fd41, %fd42;
	bra.uni 	BB0_17;

BB0_15:
	setp.neu.f64	%p17, %fd42, 0d7FF0000000000000;
	selp.b32	%r70, %r8, 0, %p17;
	mov.u32 	%r71, 0;
	mov.b64 	%fd281, {%r71, %r70};

BB0_17:
	setp.eq.f64	%p18, %fd41, 0d7FF0000000000000;
	selp.f64	%fd282, 0d0000000000000000, %fd281, %p18;

BB0_18:
	mov.f64 	%fd270, 0d3FF0000000000000;
	mul.f64 	%fd162, %fd39, %fd282;
	mul.f64 	%fd49, %fd40, %fd162;
	mul.f64 	%fd50, %fd38, %fd162;
	mul.wide.s32 	%rd56, %r104, 8;
	mov.u64 	%rd57, lMixtureAlpha;
	add.s64 	%rd58, %rd57, %rd56;
	mul.wide.s32 	%rd60, %r2, 16;
	add.s64 	%rd61, %rd59, %rd60;
	ld.global.v2.f64 	{%fd163, %fd164}, [%rd61];
	ld.const.f64 	%fd53, [%rd58];
	add.s64 	%rd63, %rd62, %rd56;
	ld.global.f64 	%fd165, [%rd63];
	add.f64 	%fd166, %fd37, %fd165;
	add.f64 	%fd54, %fd49, %fd166;
	mov.f64 	%fd167, 0d4338000000000000;
	mov.f64 	%fd168, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd169, %fd54, %fd168, %fd167;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12, %temp}, %fd169;
	}
	mov.f64 	%fd170, 0dC338000000000000;
	add.rn.f64 	%fd171, %fd169, %fd170;
	mov.f64 	%fd172, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd173, %fd171, %fd172, %fd54;
	mov.f64 	%fd174, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd175, %fd171, %fd174, %fd173;
	mov.f64 	%fd176, 0d3E928AF3FCA213EA;
	mov.f64 	%fd177, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd178, %fd177, %fd175, %fd176;
	mov.f64 	%fd179, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd180, %fd178, %fd175, %fd179;
	mov.f64 	%fd181, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd182, %fd180, %fd175, %fd181;
	mov.f64 	%fd183, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd184, %fd182, %fd175, %fd183;
	mov.f64 	%fd185, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd186, %fd184, %fd175, %fd185;
	mov.f64 	%fd187, 0d3F81111111122322;
	fma.rn.f64 	%fd188, %fd186, %fd175, %fd187;
	mov.f64 	%fd189, 0d3FA55555555502A1;
	fma.rn.f64 	%fd190, %fd188, %fd175, %fd189;
	mov.f64 	%fd191, 0d3FC5555555555511;
	fma.rn.f64 	%fd192, %fd190, %fd175, %fd191;
	mov.f64 	%fd193, 0d3FE000000000000B;
	fma.rn.f64 	%fd194, %fd192, %fd175, %fd193;
	fma.rn.f64 	%fd196, %fd194, %fd175, %fd270;
	fma.rn.f64 	%fd197, %fd196, %fd175, %fd270;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd197;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r14}, %fd197;
	}
	shl.b32 	%r72, %r12, 20;
	add.s32 	%r73, %r14, %r72;
	mov.b64 	%fd283, {%r13, %r73};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r74}, %fd54;
	}
	mov.b32 	 %f2, %r74;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p19, %f1, 0f4086232B;
	@%p19 bra 	BB0_21;

	setp.lt.f64	%p20, %fd54, 0d0000000000000000;
	add.f64 	%fd198, %fd54, 0d7FF0000000000000;
	selp.f64	%fd283, 0d0000000000000000, %fd198, %p20;
	setp.geu.f32	%p21, %f1, 0f40874800;
	@%p21 bra 	BB0_21;

	shr.u32 	%r75, %r12, 31;
	add.s32 	%r76, %r12, %r75;
	shr.s32 	%r77, %r76, 1;
	shl.b32 	%r78, %r77, 20;
	add.s32 	%r79, %r78, %r14;
	mov.b64 	%fd199, {%r13, %r79};
	sub.s32 	%r80, %r12, %r77;
	shl.b32 	%r81, %r80, 20;
	add.s32 	%r82, %r81, 1072693248;
	mov.u32 	%r83, 0;
	mov.b64 	%fd200, {%r83, %r82};
	mul.f64 	%fd283, %fd199, %fd200;

BB0_21:
	mul.f64 	%fd59, %fd53, %fd163;
	mul.f64 	%fd60, %fd53, %fd164;
	add.f64 	%fd284, %fd97, %fd50;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r84}, %fd284;
	}
	and.b32  	%r85, %r84, 2147483647;
	setp.ne.s32	%p22, %r85, 2146435072;
	@%p22 bra 	BB0_24;

	add.f64 	%fd284, %fd97, %fd50;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r86, %temp}, %fd284;
	}
	setp.ne.s32	%p23, %r86, 0;
	@%p23 bra 	BB0_24;

	add.f64 	%fd201, %fd97, %fd50;
	mov.f64 	%fd202, 0d0000000000000000;
	mul.rn.f64 	%fd284, %fd201, %fd202;

BB0_24:
	mul.f64 	%fd203, %fd284, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r106, %fd203;
	add.u64 	%rd64, %SP, 0;
	add.u64 	%rd65, %SPL, 0;
	st.local.u32 	[%rd65], %r106;
	cvt.rn.f64.s32	%fd204, %r106;
	neg.f64 	%fd205, %fd204;
	mov.f64 	%fd206, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd207, %fd205, %fd206, %fd284;
	mov.f64 	%fd208, 0d3C91A62633145C00;
	fma.rn.f64 	%fd209, %fd205, %fd208, %fd207;
	mov.f64 	%fd210, 0d397B839A252049C0;
	fma.rn.f64 	%fd285, %fd205, %fd210, %fd209;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r87}, %fd284;
	}
	and.b32  	%r88, %r87, 2145386496;
	setp.lt.u32	%p24, %r88, 1105199104;
	@%p24 bra 	BB0_26;

	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd284;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd64;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd285, [retval0+0];
	
	//{
	}// Callseq End 0
	ld.local.u32 	%r106, [%rd65];

BB0_26:
	mov.f64 	%fd271, 0d3FF0000000000000;
	mul.rn.f64 	%fd211, %fd285, %fd285;
	mov.f64 	%fd212, 0d3E21EEA7C1EF8528;
	mov.f64 	%fd213, 0dBDA8FF8320FD8164;
	fma.rn.f64 	%fd214, %fd213, %fd211, %fd212;
	mov.f64 	%fd215, 0dBE927E4F8E06E6D9;
	fma.rn.f64 	%fd216, %fd214, %fd211, %fd215;
	mov.f64 	%fd217, 0d3EFA01A019DDBCE9;
	fma.rn.f64 	%fd218, %fd216, %fd211, %fd217;
	mov.f64 	%fd219, 0dBF56C16C16C15D47;
	fma.rn.f64 	%fd220, %fd218, %fd211, %fd219;
	mov.f64 	%fd221, 0d3FA5555555555551;
	fma.rn.f64 	%fd222, %fd220, %fd211, %fd221;
	mov.f64 	%fd223, 0dBFE0000000000000;
	fma.rn.f64 	%fd224, %fd222, %fd211, %fd223;
	fma.rn.f64 	%fd226, %fd224, %fd211, %fd271;
	mov.f64 	%fd227, 0dBE5AE5F12CB0D246;
	mov.f64 	%fd228, 0d3DE5DB65F9785EBA;
	fma.rn.f64 	%fd229, %fd228, %fd211, %fd227;
	mov.f64 	%fd230, 0d3EC71DE369ACE392;
	fma.rn.f64 	%fd231, %fd229, %fd211, %fd230;
	mov.f64 	%fd232, 0dBF2A01A019DB62A1;
	fma.rn.f64 	%fd233, %fd231, %fd211, %fd232;
	mov.f64 	%fd234, 0d3F81111111110818;
	fma.rn.f64 	%fd235, %fd233, %fd211, %fd234;
	mov.f64 	%fd236, 0dBFC5555555555554;
	fma.rn.f64 	%fd237, %fd235, %fd211, %fd236;
	mov.f64 	%fd238, 0d0000000000000000;
	fma.rn.f64 	%fd239, %fd237, %fd211, %fd238;
	fma.rn.f64 	%fd240, %fd239, %fd285, %fd285;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r89}, %fd240;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r90, %temp}, %fd240;
	}
	xor.b32  	%r91, %r89, -2147483648;
	mov.b64 	%fd241, {%r90, %r91};
	and.b32  	%r92, %r106, 1;
	setp.eq.b32	%p25, %r92, 1;
	not.pred 	%p26, %p25;
	selp.f64	%fd286, %fd240, %fd226, %p26;
	selp.f64	%fd287, %fd226, %fd241, %p26;
	and.b32  	%r93, %r106, 2;
	setp.eq.s32	%p27, %r93, 0;
	@%p27 bra 	BB0_28;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r94}, %fd286;
	}
	xor.b32  	%r95, %r94, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r96, %temp}, %fd286;
	}
	mov.b64 	%fd286, {%r96, %r95};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r97}, %fd287;
	}
	xor.b32  	%r98, %r97, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r99, %temp}, %fd287;
	}
	mov.b64 	%fd287, {%r99, %r98};

BB0_28:
	mul.f64 	%fd242, %fd283, %fd286;
	mul.f64 	%fd243, %fd75, %fd242;
	neg.f64 	%fd244, %fd243;
	mul.f64 	%fd245, %fd283, %fd287;
	fma.rn.f64 	%fd246, %fd74, %fd245, %fd244;
	mul.f64 	%fd247, %fd75, %fd245;
	fma.rn.f64 	%fd248, %fd74, %fd242, %fd247;
	mul.f64 	%fd249, %fd50, %fd50;
	fma.rn.f64 	%fd250, %fd49, %fd49, %fd249;
	rcp.rn.f64 	%fd251, %fd250;
	mul.f64 	%fd252, %fd50, %fd248;
	fma.rn.f64 	%fd253, %fd246, %fd49, %fd252;
	mul.f64 	%fd254, %fd251, %fd253;
	mul.f64 	%fd255, %fd50, %fd246;
	neg.f64 	%fd256, %fd255;
	fma.rn.f64 	%fd257, %fd248, %fd49, %fd256;
	mul.f64 	%fd258, %fd251, %fd257;
	mul.f64 	%fd259, %fd60, %fd258;
	neg.f64 	%fd260, %fd259;
	fma.rn.f64 	%fd261, %fd59, %fd254, %fd260;
	mul.f64 	%fd262, %fd60, %fd254;
	fma.rn.f64 	%fd263, %fd59, %fd258, %fd262;
	mul.wide.s32 	%rd69, %r1, 16;
	add.s64 	%rd70, %rd68, %rd69;
	ld.global.v2.f64 	{%fd264, %fd265}, [%rd70];
	add.f64 	%fd268, %fd263, %fd265;
	add.f64 	%fd269, %fd261, %fd264;
	st.global.v2.f64 	[%rd70], {%fd269, %fd268};
	add.s32 	%r105, %r105, 1;
	add.s32 	%r104, %r104, 1;
	setp.lt.s32	%p28, %r104, %r7;
	@%p28 bra 	BB0_13;

BB0_29:
	ret;
}

.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<42>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<101>;


	mov.u64 	%SPL, __local_depot1;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd37, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd1, %SPL, 0;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	and.b32  	%r40, %r1, -2147483648;
	shr.u32 	%r3, %r1, 20;
	bfe.u32 	%r4, %r1, 20, 11;
	setp.eq.s32	%p1, %r4, 2047;
	@%p1 bra 	BB1_13;

	add.s32 	%r15, %r4, -1024;
	shr.u32 	%r16, %r15, 6;
	mov.u32 	%r17, 15;
	sub.s32 	%r5, %r17, %r16;
	mov.u32 	%r18, 19;
	sub.s32 	%r19, %r18, %r16;
	mov.u32 	%r20, 18;
	min.s32 	%r6, %r20, %r19;
	mov.u64 	%rd94, 0;
	setp.ge.s32	%p2, %r5, %r6;
	mov.u64 	%rd93, %rd1;
	@%p2 bra 	BB1_4;

	bfe.u32 	%r21, %r1, 20, 11;
	add.s32 	%r22, %r21, -1024;
	shr.u32 	%r23, %r22, 6;
	sub.s32 	%r25, %r17, %r23;
	mul.wide.s32 	%rd41, %r25, 8;
	mov.u64 	%rd42, __cudart_i2opi_d;
	add.s64 	%rd89, %rd42, %rd41;
	mov.b64 	 %rd43, %fd4;
	shl.b64 	%rd44, %rd43, 11;
	or.b64  	%rd5, %rd44, -9223372036854775808;
	mov.u64 	%rd94, 0;
	mov.u64 	%rd93, %rd1;
	mov.u64 	%rd91, %rd1;
	mov.u32 	%r39, %r5;

BB1_3:
	.pragma "nounroll";
	ld.const.u64 	%rd47, [%rd89];
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd47;    
	mov.b64         {blo,bhi}, %rd5;    
	mov.b64         {clo,chi}, %rd94;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd45, {r0,r1};      
	mov.b64         %rd94, {r2,r3};      
	}
	// inline asm
	st.local.u64 	[%rd91], %rd45;
	add.s32 	%r39, %r39, 1;
	sub.s32 	%r26, %r39, %r5;
	mul.wide.s32 	%rd50, %r26, 8;
	add.s64 	%rd91, %rd1, %rd50;
	add.s64 	%rd93, %rd93, 8;
	add.s64 	%rd89, %rd89, 8;
	setp.lt.s32	%p3, %r39, %r6;
	@%p3 bra 	BB1_3;

BB1_4:
	st.local.u64 	[%rd93], %rd94;
	ld.local.u64 	%rd95, [%rd1+16];
	ld.local.u64 	%rd96, [%rd1+24];
	and.b32  	%r9, %r3, 63;
	setp.eq.s32	%p4, %r9, 0;
	@%p4 bra 	BB1_6;

	mov.u32 	%r27, 64;
	sub.s32 	%r28, %r27, %r9;
	shl.b64 	%rd51, %rd96, %r9;
	shr.u64 	%rd52, %rd95, %r28;
	or.b64  	%rd96, %rd51, %rd52;
	shl.b64 	%rd53, %rd95, %r9;
	ld.local.u64 	%rd54, [%rd1+8];
	shr.u64 	%rd55, %rd54, %r28;
	or.b64  	%rd95, %rd55, %rd53;

BB1_6:
	shr.u64 	%rd56, %rd96, 62;
	cvt.u32.u64	%r29, %rd56;
	shr.u64 	%rd57, %rd95, 62;
	shl.b64 	%rd58, %rd96, 2;
	or.b64  	%rd98, %rd58, %rd57;
	shl.b64 	%rd97, %rd95, 2;
	shr.u64 	%rd59, %rd96, 61;
	cvt.u32.u64	%r30, %rd59;
	and.b32  	%r31, %r30, 1;
	add.s32 	%r32, %r31, %r29;
	neg.s32 	%r33, %r32;
	setp.eq.s32	%p5, %r40, 0;
	selp.b32	%r34, %r32, %r33, %p5;
	cvta.to.local.u64 	%rd60, %rd37;
	st.local.u32 	[%rd60], %r34;
	setp.eq.s32	%p6, %r31, 0;
	@%p6 bra 	BB1_8;

	mov.u64 	%rd64, 0;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd64;
	mov.b64         {a2,a3}, %rd64;
	mov.b64         {b0,b1}, %rd97;
	mov.b64         {b2,b3}, %rd98;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd97, {r0,r1};
	mov.b64         %rd98, {r2,r3};
	}
	// inline asm
	xor.b32  	%r40, %r40, -2147483648;

BB1_8:
	clz.b64 	%r41, %rd98;
	setp.eq.s32	%p7, %r41, 0;
	@%p7 bra 	BB1_10;

	shl.b64 	%rd67, %rd98, %r41;
	mov.u32 	%r35, 64;
	sub.s32 	%r36, %r35, %r41;
	shr.u64 	%rd68, %rd97, %r36;
	or.b64  	%rd98, %rd68, %rd67;

BB1_10:
	mov.u64 	%rd72, -3958705157555305931;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd98;   
	mov.b64         {blo,bhi}, %rd72;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd69, {r0,r1};     
	mov.b64         %rd100, {r2,r3};     
	}
	// inline asm
	setp.lt.s64	%p8, %rd100, 1;
	@%p8 bra 	BB1_12;

	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd69;
	mov.b64         {a2,a3}, %rd100;
	mov.b64         {b0,b1}, %rd69;
	mov.b64         {b2,b3}, %rd100;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd73, {r0,r1};
	mov.b64         %rd100, {r2,r3};
	}
	// inline asm
	add.s32 	%r41, %r41, 1;

BB1_12:
	cvt.u64.u32	%rd79, %r40;
	shl.b64 	%rd80, %rd79, 32;
	mov.u32 	%r37, 1022;
	sub.s32 	%r38, %r37, %r41;
	cvt.u64.u32	%rd81, %r38;
	shl.b64 	%rd82, %rd81, 52;
	add.s64 	%rd83, %rd100, 1;
	shr.u64 	%rd84, %rd83, 10;
	add.s64 	%rd85, %rd84, 1;
	shr.u64 	%rd86, %rd85, 1;
	add.s64 	%rd87, %rd86, %rd82;
	or.b64  	%rd88, %rd87, %rd80;
	mov.b64 	 %fd4, %rd88;

BB1_13:
	st.param.f64	[func_retval0+0], %fd4;
	ret;
}


