//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2_
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0
)
;
.const .align 8 .b8 box_min[24];
.const .align 8 .b8 box_max[24];
.const .align 8 .f64 g_up;
.const .align 8 .f64 g_down1;
.const .align 8 .f64 g_down2;
.const .align 8 .f64 fw;
.const .align 8 .f64 sigt;
.const .align 4 .u32 vSize;
.const .align 4 .u32 lSize;
.const .align 8 .b8 fastConstCopy[64];

.visible .entry _Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2_(
	.param .u64 _Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_0,
	.param .u64 _Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_1,
	.param .u64 _Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_2,
	.param .u64 _Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_3,
	.param .u64 _Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_4,
	.param .u64 _Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_5,
	.param .u64 _Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_6,
	.param .u64 _Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_7
)
{
	.reg .pred 	%p<77>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<135>;
	.reg .f64 	%fd<259>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd4, [_Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_2];
	ld.param.u64 	%rd5, [_Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_3];
	ld.param.u64 	%rd6, [_Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_4];
	ld.param.u64 	%rd7, [_Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_5];
	ld.param.u64 	%rd8, [_Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_6];
	ld.param.u64 	%rd9, [_Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_7];
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r12, %r11, %r13;
	ld.const.u32 	%r14, [lSize];
	ld.const.u32 	%r2, [vSize];
	mul.lo.s32 	%r15, %r14, %r2;
	setp.ge.s32	%p4, %r1, %r15;
	@%p4 bra 	BB0_71;

	cvta.to.global.u64 	%rd10, %rd4;
	rem.s32 	%r16, %r1, %r2;
	mul.wide.s32 	%rd11, %r16, 8;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f64 	%fd1, [%rd12];
	cvta.to.global.u64 	%rd13, %rd5;
	add.s64 	%rd14, %rd13, %rd11;
	ld.global.f64 	%fd2, [%rd14];
	cvta.to.global.u64 	%rd15, %rd6;
	add.s64 	%rd16, %rd15, %rd11;
	ld.global.f64 	%fd3, [%rd16];
	cvta.to.global.u64 	%rd17, %rd7;
	add.s64 	%rd18, %rd17, %rd11;
	cvta.to.global.u64 	%rd19, %rd8;
	add.s64 	%rd20, %rd19, %rd11;
	ld.global.f64 	%fd4, [%rd20];
	cvta.to.global.u64 	%rd21, %rd9;
	add.s64 	%rd22, %rd21, %rd11;
	ld.global.f64 	%fd5, [%rd22];
	ld.global.f64 	%fd92, [%rd18];
	setp.gtu.f64	%p5, %fd92, 0d0000000000000000;
	abs.f64 	%fd6, %fd92;
	@%p5 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_3:
	ld.const.f64 	%fd94, [box_max];
	ld.const.f64 	%fd238, [fastConstCopy];
	sub.f64 	%fd239, %fd94, %fd238;
	bra.uni 	BB0_4;

BB0_2:
	ld.const.f64 	%fd238, [fastConstCopy];
	ld.const.f64 	%fd93, [box_min];
	sub.f64 	%fd239, %fd238, %fd93;

BB0_4:
	div.rn.f64 	%fd13, %fd239, %fd6;
	abs.f64 	%fd14, %fd4;
	setp.gtu.f64	%p6, %fd4, 0d0000000000000000;
	@%p6 bra 	BB0_6;
	bra.uni 	BB0_5;

BB0_6:
	ld.const.f64 	%fd96, [box_max+8];
	ld.const.f64 	%fd240, [fastConstCopy+8];
	sub.f64 	%fd241, %fd96, %fd240;
	bra.uni 	BB0_7;

BB0_5:
	ld.const.f64 	%fd240, [fastConstCopy+8];
	ld.const.f64 	%fd95, [box_min+8];
	sub.f64 	%fd241, %fd240, %fd95;

BB0_7:
	div.rn.f64 	%fd21, %fd241, %fd14;
	abs.f64 	%fd22, %fd5;
	setp.gtu.f64	%p7, %fd5, 0d0000000000000000;
	@%p7 bra 	BB0_9;
	bra.uni 	BB0_8;

BB0_9:
	ld.const.f64 	%fd98, [box_max+16];
	ld.const.f64 	%fd242, [fastConstCopy+16];
	sub.f64 	%fd243, %fd98, %fd242;
	bra.uni 	BB0_10;

BB0_8:
	ld.const.f64 	%fd242, [fastConstCopy+16];
	ld.const.f64 	%fd97, [box_min+16];
	sub.f64 	%fd243, %fd242, %fd97;

BB0_10:
	min.f64 	%fd99, %fd13, %fd21;
	div.rn.f64 	%fd100, %fd243, %fd22;
	min.f64 	%fd101, %fd99, %fd100;
	mul.f64 	%fd102, %fd3, %fd242;
	fma.rn.f64 	%fd103, %fd2, %fd240, %fd102;
	fma.rn.f64 	%fd104, %fd1, %fd238, %fd103;
	mul.f64 	%fd245, %fd104, 0dC000000000000000;
	ld.const.f64 	%fd105, [sigt];
	mul.f64 	%fd30, %fd101, %fd105;
	neg.f64 	%fd106, %fd30;
	mov.f64 	%fd107, 0d4338000000000000;
	mov.f64 	%fd108, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd109, %fd106, %fd108, %fd107;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4, %temp}, %fd109;
	}
	mov.f64 	%fd110, 0dC338000000000000;
	add.rn.f64 	%fd111, %fd109, %fd110;
	mov.f64 	%fd112, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd113, %fd111, %fd112, %fd106;
	mov.f64 	%fd114, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd115, %fd111, %fd114, %fd113;
	mov.f64 	%fd116, 0d3E928AF3FCA213EA;
	mov.f64 	%fd117, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd118, %fd117, %fd115, %fd116;
	mov.f64 	%fd119, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd120, %fd118, %fd115, %fd119;
	mov.f64 	%fd121, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd122, %fd120, %fd115, %fd121;
	mov.f64 	%fd123, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd124, %fd122, %fd115, %fd123;
	mov.f64 	%fd125, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd126, %fd124, %fd115, %fd125;
	mov.f64 	%fd127, 0d3F81111111122322;
	fma.rn.f64 	%fd128, %fd126, %fd115, %fd127;
	mov.f64 	%fd129, 0d3FA55555555502A1;
	fma.rn.f64 	%fd130, %fd128, %fd115, %fd129;
	mov.f64 	%fd131, 0d3FC5555555555511;
	fma.rn.f64 	%fd132, %fd130, %fd115, %fd131;
	mov.f64 	%fd133, 0d3FE000000000000B;
	fma.rn.f64 	%fd134, %fd132, %fd115, %fd133;
	mov.f64 	%fd135, 0d3FF0000000000000;
	fma.rn.f64 	%fd136, %fd134, %fd115, %fd135;
	fma.rn.f64 	%fd137, %fd136, %fd115, %fd135;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5, %temp}, %fd137;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6}, %fd137;
	}
	shl.b32 	%r17, %r4, 20;
	add.s32 	%r18, %r6, %r17;
	mov.b64 	%fd244, {%r5, %r18};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd106;
	}
	mov.b32 	 %f2, %r19;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p8, %f1, 0f4086232B;
	@%p8 bra 	BB0_13;

	setp.gt.f64	%p9, %fd30, 0d8000000000000000;
	mov.f64 	%fd138, 0d7FF0000000000000;
	sub.f64 	%fd139, %fd138, %fd30;
	selp.f64	%fd244, 0d0000000000000000, %fd139, %p9;
	setp.geu.f32	%p10, %f1, 0f40874800;
	@%p10 bra 	BB0_13;

	shr.u32 	%r20, %r4, 31;
	add.s32 	%r21, %r4, %r20;
	shr.s32 	%r22, %r21, 1;
	shl.b32 	%r23, %r22, 20;
	add.s32 	%r24, %r23, %r6;
	mov.b64 	%fd140, {%r5, %r24};
	sub.s32 	%r25, %r4, %r22;
	shl.b32 	%r26, %r25, 20;
	add.s32 	%r27, %r26, 1072693248;
	mov.u32 	%r28, 0;
	mov.b64 	%fd141, {%r28, %r27};
	mul.f64 	%fd244, %fd140, %fd141;

BB0_13:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd245;
	}
	add.s32 	%r30, %r29, %r29;
	setp.lt.u32	%p11, %r30, -2038431743;
	@%p11 bra 	BB0_15;

	mov.f64 	%fd142, 0d0000000000000000;
	mul.rn.f64 	%fd245, %fd245, %fd142;

BB0_15:
	mov.f64 	%fd235, 0d3FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %fd245;
	}
	add.s32 	%r32, %r31, 1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r33, %temp}, %fd245;
	}
	mov.b64 	%fd143, {%r33, %r32};
	cvt.rni.f64.f64	%fd144, %fd143;
	cvt.rzi.s64.f64	%rd23, %fd144;
	cvt.u32.u64	%r34, %rd23;
	neg.f64 	%fd145, %fd144;
	mov.f64 	%fd146, 0d3FE0000000000000;
	fma.rn.f64 	%fd147, %fd145, %fd146, %fd245;
	mul.f64 	%fd148, %fd147, 0d3CA1A62633145C07;
	mov.f64 	%fd149, 0d400921FB54442D18;
	fma.rn.f64 	%fd150, %fd147, %fd149, %fd148;
	mul.rn.f64 	%fd151, %fd150, %fd150;
	mov.f64 	%fd152, 0d3E21EEA7C1EF8528;
	mov.f64 	%fd153, 0dBDA8FF8320FD8164;
	fma.rn.f64 	%fd154, %fd153, %fd151, %fd152;
	mov.f64 	%fd155, 0dBE927E4F8E06E6D9;
	fma.rn.f64 	%fd156, %fd154, %fd151, %fd155;
	mov.f64 	%fd157, 0d3EFA01A019DDBCE9;
	fma.rn.f64 	%fd158, %fd156, %fd151, %fd157;
	mov.f64 	%fd159, 0dBF56C16C16C15D47;
	fma.rn.f64 	%fd160, %fd158, %fd151, %fd159;
	mov.f64 	%fd161, 0d3FA5555555555551;
	fma.rn.f64 	%fd162, %fd160, %fd151, %fd161;
	mov.f64 	%fd163, 0dBFE0000000000000;
	fma.rn.f64 	%fd164, %fd162, %fd151, %fd163;
	fma.rn.f64 	%fd166, %fd164, %fd151, %fd235;
	mov.f64 	%fd167, 0dBE5AE5F12CB0D246;
	mov.f64 	%fd168, 0d3DE5DB65F9785EBA;
	fma.rn.f64 	%fd169, %fd168, %fd151, %fd167;
	mov.f64 	%fd170, 0d3EC71DE369ACE392;
	fma.rn.f64 	%fd171, %fd169, %fd151, %fd170;
	mov.f64 	%fd172, 0dBF2A01A019DB62A1;
	fma.rn.f64 	%fd173, %fd171, %fd151, %fd172;
	mov.f64 	%fd174, 0d3F81111111110818;
	fma.rn.f64 	%fd175, %fd173, %fd151, %fd174;
	mov.f64 	%fd176, 0dBFC5555555555554;
	fma.rn.f64 	%fd177, %fd175, %fd151, %fd176;
	mov.f64 	%fd178, 0d0000000000000000;
	fma.rn.f64 	%fd179, %fd177, %fd151, %fd178;
	fma.rn.f64 	%fd180, %fd179, %fd150, %fd150;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd180;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r36, %temp}, %fd180;
	}
	xor.b32  	%r37, %r35, -2147483648;
	mov.b64 	%fd181, {%r36, %r37};
	and.b64  	%rd24, %rd23, 1;
	setp.eq.b64	%p12, %rd24, 1;
	not.pred 	%p13, %p12;
	selp.f64	%fd246, %fd166, %fd181, %p13;
	selp.f64	%fd248, %fd180, %fd166, %p13;
	and.b32  	%r38, %r34, 2;
	setp.eq.s32	%p14, %r38, 0;
	@%p14 bra 	BB0_17;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r39}, %fd248;
	}
	xor.b32  	%r40, %r39, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r41, %temp}, %fd248;
	}
	mov.b64 	%fd248, {%r41, %r40};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r42}, %fd246;
	}
	xor.b32  	%r43, %r42, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r44, %temp}, %fd246;
	}
	mov.b64 	%fd246, {%r44, %r43};

BB0_17:
	mov.f64 	%fd236, 0d3FF0000000000000;
	fma.rn.f64 	%fd43, %fd246, %fd236, %fd178;
	cvt.rzi.f64.f64	%fd184, %fd245;
	setp.neu.f64	%p15, %fd245, %fd184;
	@%p15 bra 	BB0_19;

	mul.rn.f64 	%fd248, %fd245, %fd178;

BB0_19:
	ld.const.f64 	%fd186, [fastConstCopy+40];
	mul.f64 	%fd187, %fd3, %fd186;
	ld.const.f64 	%fd188, [fastConstCopy+32];
	fma.rn.f64 	%fd189, %fd2, %fd188, %fd187;
	ld.const.f64 	%fd190, [fastConstCopy+24];
	fma.rn.f64 	%fd46, %fd1, %fd190, %fd189;
	ld.const.f64 	%fd47, [fw];
	setp.eq.f64	%p16, %fd47, 0d3FF0000000000000;
	mov.f64 	%fd191, 0d3FF8000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7}, %fd191;
	}
	bfe.u32 	%r45, %r7, 20, 11;
	add.s32 	%r46, %r45, -1012;
	mov.u64 	%rd25, 4609434218613702656;
	shl.b64 	%rd1, %rd25, %r46;
	ld.const.f64 	%fd48, [g_up];
	@%p16 bra 	BB0_53;
	bra.uni 	BB0_20;

BB0_53:
	setp.ne.s64	%p57, %rd1, -9223372036854775808;
	setp.eq.s64	%p58, %rd1, -9223372036854775808;
	ld.const.f64 	%fd205, [g_down1];
	ld.const.f64 	%fd206, [g_down2];
	fma.rn.f64 	%fd78, %fd206, %fd46, %fd205;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r10}, %fd78;
	}
	abs.f64 	%fd79, %fd78;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd79;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd256, [retval0+0];
	
	//{
	}// Callseq End 2
	setp.gt.s32	%p59, %r10, -1;
	setp.lt.s32	%p60, %r10, 0;
	and.pred  	%p3, %p60, %p58;
	or.pred  	%p61, %p59, %p57;
	@%p61 bra 	BB0_55;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r101}, %fd256;
	}
	xor.b32  	%r102, %r101, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r103, %temp}, %fd256;
	}
	mov.b64 	%fd256, {%r103, %r102};

BB0_55:
	setp.eq.f64	%p62, %fd78, 0d0000000000000000;
	@%p62 bra 	BB0_58;
	bra.uni 	BB0_56;

BB0_58:
	selp.b32	%r104, %r10, 0, %p58;
	mov.u32 	%r105, 0;
	or.b32  	%r106, %r104, 2146435072;
	setp.lt.s32	%p66, %r7, 0;
	selp.b32	%r107, %r106, %r104, %p66;
	mov.b64 	%fd256, {%r105, %r107};
	bra.uni 	BB0_59;

BB0_20:
	setp.ne.s64	%p17, %rd1, -9223372036854775808;
	setp.eq.s64	%p18, %rd1, -9223372036854775808;
	ld.const.f64 	%fd49, [g_down1];
	ld.const.f64 	%fd50, [g_down2];
	fma.rn.f64 	%fd51, %fd50, %fd46, %fd49;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd51;
	}
	abs.f64 	%fd52, %fd51;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd52;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd250, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.gt.s32	%p19, %r8, -1;
	setp.lt.s32	%p20, %r8, 0;
	and.pred  	%p1, %p20, %p18;
	or.pred  	%p21, %p19, %p17;
	@%p21 bra 	BB0_22;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r47}, %fd250;
	}
	xor.b32  	%r48, %r47, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd250;
	}
	mov.b64 	%fd250, {%r49, %r48};

BB0_22:
	setp.eq.f64	%p22, %fd51, 0d0000000000000000;
	@%p22 bra 	BB0_25;
	bra.uni 	BB0_23;

BB0_25:
	bfe.u32 	%r50, %r7, 20, 11;
	add.s32 	%r51, %r50, -1012;
	shl.b64 	%rd27, %rd25, %r51;
	setp.eq.s64	%p25, %rd27, -9223372036854775808;
	selp.b32	%r52, %r8, 0, %p25;
	mov.u32 	%r53, 0;
	or.b32  	%r54, %r52, 2146435072;
	setp.lt.s32	%p26, %r7, 0;
	selp.b32	%r55, %r54, %r52, %p26;
	mov.b64 	%fd250, {%r53, %r55};
	bra.uni 	BB0_26;

BB0_56:
	@%p59 bra 	BB0_59;

	cvt.rzi.f64.f64	%fd208, %fd191;
	setp.neu.f64	%p64, %fd208, 0d3FF8000000000000;
	selp.f64	%fd256, 0dFFF8000000000000, %fd256, %p64;

BB0_59:
	add.f64 	%fd257, %fd78, 0d3FF8000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r108}, %fd257;
	}
	and.b32  	%r109, %r108, 2146435072;
	setp.ne.s32	%p67, %r109, 2146435072;
	@%p67 bra 	BB0_60;

	setp.gtu.f64	%p68, %fd79, 0d7FF0000000000000;
	@%p68 bra 	BB0_69;

	and.b32  	%r110, %r7, 2147483647;
	setp.ne.s32	%p69, %r110, 2146435072;
	@%p69 bra 	BB0_64;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r111, %temp}, %fd191;
	}
	setp.eq.s32	%p70, %r111, 0;
	@%p70 bra 	BB0_68;

BB0_64:
	and.b32  	%r112, %r10, 2147483647;
	setp.ne.s32	%p71, %r112, 2146435072;
	@%p71 bra 	BB0_65;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r113, %temp}, %fd78;
	}
	setp.ne.s32	%p72, %r113, 0;
	mov.f64 	%fd257, %fd256;
	@%p72 bra 	BB0_69;

	shr.s32 	%r114, %r7, 31;
	and.b32  	%r115, %r114, -2146435072;
	add.s32 	%r116, %r115, 2146435072;
	or.b32  	%r117, %r116, -2147483648;
	selp.b32	%r118, %r117, %r116, %p3;
	mov.u32 	%r119, 0;
	mov.b64 	%fd257, {%r119, %r118};
	bra.uni 	BB0_69;

BB0_60:
	mov.f64 	%fd257, %fd256;
	bra.uni 	BB0_69;

BB0_23:
	@%p19 bra 	BB0_26;

	cvt.rzi.f64.f64	%fd193, %fd191;
	setp.neu.f64	%p24, %fd193, 0d3FF8000000000000;
	selp.f64	%fd250, 0dFFF8000000000000, %fd250, %p24;

BB0_26:
	add.f64 	%fd251, %fd51, 0d3FF8000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r56}, %fd251;
	}
	and.b32  	%r57, %r56, 2146435072;
	setp.ne.s32	%p27, %r57, 2146435072;
	@%p27 bra 	BB0_27;

	setp.gtu.f64	%p28, %fd52, 0d7FF0000000000000;
	@%p28 bra 	BB0_36;

	and.b32  	%r58, %r7, 2147483647;
	setp.ne.s32	%p29, %r58, 2146435072;
	@%p29 bra 	BB0_31;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r59, %temp}, %fd191;
	}
	setp.eq.s32	%p30, %r59, 0;
	@%p30 bra 	BB0_35;

BB0_31:
	and.b32  	%r60, %r8, 2147483647;
	setp.ne.s32	%p31, %r60, 2146435072;
	@%p31 bra 	BB0_32;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r61, %temp}, %fd51;
	}
	setp.ne.s32	%p32, %r61, 0;
	mov.f64 	%fd251, %fd250;
	@%p32 bra 	BB0_36;

	shr.s32 	%r62, %r7, 31;
	and.b32  	%r63, %r62, -2146435072;
	add.s32 	%r64, %r63, 2146435072;
	or.b32  	%r65, %r64, -2147483648;
	selp.b32	%r66, %r65, %r64, %p1;
	mov.u32 	%r67, 0;
	mov.b64 	%fd251, {%r67, %r66};
	bra.uni 	BB0_36;

BB0_27:
	mov.f64 	%fd251, %fd250;
	bra.uni 	BB0_36;

BB0_65:
	mov.f64 	%fd257, %fd256;
	bra.uni 	BB0_69;

BB0_32:
	mov.f64 	%fd251, %fd250;
	bra.uni 	BB0_36;

BB0_68:
	setp.gt.f64	%p73, %fd79, 0d3FF0000000000000;
	selp.b32	%r120, 2146435072, 0, %p73;
	mov.u32 	%r121, 0;
	xor.b32  	%r122, %r120, 2146435072;
	setp.lt.s32	%p74, %r7, 0;
	selp.b32	%r123, %r122, %r120, %p74;
	setp.eq.f64	%p75, %fd78, 0dBFF0000000000000;
	selp.b32	%r124, 1072693248, %r123, %p75;
	mov.b64 	%fd257, {%r121, %r124};

BB0_69:
	setp.eq.f64	%p76, %fd78, 0d3FF0000000000000;
	selp.f64	%fd210, 0d3FF0000000000000, %fd257, %p76;
	div.rn.f64 	%fd258, %fd48, %fd210;
	bra.uni 	BB0_70;

BB0_35:
	setp.gt.f64	%p33, %fd52, 0d3FF0000000000000;
	selp.b32	%r68, 2146435072, 0, %p33;
	mov.u32 	%r69, 0;
	xor.b32  	%r70, %r68, 2146435072;
	setp.lt.s32	%p34, %r7, 0;
	selp.b32	%r71, %r70, %r68, %p34;
	setp.eq.f64	%p35, %fd51, 0dBFF0000000000000;
	selp.b32	%r72, 1072693248, %r71, %p35;
	mov.b64 	%fd251, {%r69, %r72};

BB0_36:
	mov.f64 	%fd237, 0d3FF0000000000000;
	bfe.u32 	%r73, %r7, 20, 11;
	add.s32 	%r74, %r73, -1012;
	shl.b64 	%rd29, %rd25, %r74;
	setp.ne.s64	%p36, %rd29, -9223372036854775808;
	setp.eq.s64	%p37, %rd29, -9223372036854775808;
	setp.eq.f64	%p38, %fd51, 0d3FF0000000000000;
	selp.f64	%fd195, 0d3FF0000000000000, %fd251, %p38;
	mul.f64 	%fd196, %fd47, %fd48;
	div.rn.f64 	%fd63, %fd196, %fd195;
	sub.f64 	%fd198, %fd237, %fd47;
	mul.f64 	%fd64, %fd198, %fd48;
	neg.f64 	%fd199, %fd50;
	fma.rn.f64 	%fd65, %fd199, %fd46, %fd49;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9}, %fd65;
	}
	abs.f64 	%fd66, %fd65;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd66;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd253, [retval0+0];
	
	//{
	}// Callseq End 1
	setp.gt.s32	%p39, %r9, -1;
	setp.lt.s32	%p40, %r9, 0;
	and.pred  	%p2, %p40, %p37;
	or.pred  	%p41, %p39, %p36;
	@%p41 bra 	BB0_38;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r75}, %fd253;
	}
	xor.b32  	%r76, %r75, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r77, %temp}, %fd253;
	}
	mov.b64 	%fd253, {%r77, %r76};

BB0_38:
	setp.eq.f64	%p42, %fd65, 0d0000000000000000;
	@%p42 bra 	BB0_41;
	bra.uni 	BB0_39;

BB0_41:
	bfe.u32 	%r78, %r7, 20, 11;
	add.s32 	%r79, %r78, -1012;
	shl.b64 	%rd31, %rd25, %r79;
	setp.eq.s64	%p45, %rd31, -9223372036854775808;
	selp.b32	%r80, %r9, 0, %p45;
	mov.u32 	%r81, 0;
	or.b32  	%r82, %r80, 2146435072;
	setp.lt.s32	%p46, %r7, 0;
	selp.b32	%r83, %r82, %r80, %p46;
	mov.b64 	%fd253, {%r81, %r83};
	bra.uni 	BB0_42;

BB0_39:
	@%p39 bra 	BB0_42;

	cvt.rzi.f64.f64	%fd201, %fd191;
	setp.neu.f64	%p44, %fd201, 0d3FF8000000000000;
	selp.f64	%fd253, 0dFFF8000000000000, %fd253, %p44;

BB0_42:
	add.f64 	%fd254, %fd65, 0d3FF8000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r84}, %fd254;
	}
	and.b32  	%r85, %r84, 2146435072;
	setp.ne.s32	%p47, %r85, 2146435072;
	@%p47 bra 	BB0_43;

	setp.gtu.f64	%p48, %fd66, 0d7FF0000000000000;
	@%p48 bra 	BB0_52;

	and.b32  	%r86, %r7, 2147483647;
	setp.ne.s32	%p49, %r86, 2146435072;
	@%p49 bra 	BB0_47;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r87, %temp}, %fd191;
	}
	setp.eq.s32	%p50, %r87, 0;
	@%p50 bra 	BB0_51;

BB0_47:
	and.b32  	%r88, %r9, 2147483647;
	setp.ne.s32	%p51, %r88, 2146435072;
	@%p51 bra 	BB0_48;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r89, %temp}, %fd65;
	}
	setp.ne.s32	%p52, %r89, 0;
	mov.f64 	%fd254, %fd253;
	@%p52 bra 	BB0_52;

	shr.s32 	%r90, %r7, 31;
	and.b32  	%r91, %r90, -2146435072;
	add.s32 	%r92, %r91, 2146435072;
	or.b32  	%r93, %r92, -2147483648;
	selp.b32	%r94, %r93, %r92, %p2;
	mov.u32 	%r95, 0;
	mov.b64 	%fd254, {%r95, %r94};
	bra.uni 	BB0_52;

BB0_43:
	mov.f64 	%fd254, %fd253;
	bra.uni 	BB0_52;

BB0_48:
	mov.f64 	%fd254, %fd253;
	bra.uni 	BB0_52;

BB0_51:
	setp.gt.f64	%p53, %fd66, 0d3FF0000000000000;
	selp.b32	%r96, 2146435072, 0, %p53;
	mov.u32 	%r97, 0;
	xor.b32  	%r98, %r96, 2146435072;
	setp.lt.s32	%p54, %r7, 0;
	selp.b32	%r99, %r98, %r96, %p54;
	setp.eq.f64	%p55, %fd65, 0dBFF0000000000000;
	selp.b32	%r100, 1072693248, %r99, %p55;
	mov.b64 	%fd254, {%r97, %r100};

BB0_52:
	setp.eq.f64	%p56, %fd65, 0d3FF0000000000000;
	selp.f64	%fd203, 0d3FF0000000000000, %fd254, %p56;
	div.rn.f64 	%fd204, %fd64, %fd203;
	add.f64 	%fd258, %fd63, %fd204;

BB0_70:
	mov.u32 	%r134, %tid.x;
	mov.u32 	%r133, %ctaid.x;
	mov.u32 	%r132, %ntid.x;
	mad.lo.s32 	%r131, %r132, %r133, %r134;
	ld.param.u64 	%rd39, [_Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_0];
	ld.const.u32 	%r130, [vSize];
	div.s32 	%r129, %r131, %r130;
	ld.param.u64 	%rd38, [_Z13integrateMultP7double2S0_PKdS2_S2_S2_S2_S2__param_1];
	sqrt.rn.f64 	%fd211, %fd258;
	mul.f64 	%fd212, %fd244, %fd211;
	cvta.to.global.u64 	%rd32, %rd38;
	mul.wide.s32 	%rd33, %r129, 16;
	add.s64 	%rd34, %rd32, %rd33;
	ld.global.v2.f64 	{%fd213, %fd214}, [%rd34];
	ld.const.f64 	%fd217, [fastConstCopy+56];
	mul.f64 	%fd218, %fd214, %fd217;
	neg.f64 	%fd219, %fd218;
	ld.const.f64 	%fd220, [fastConstCopy+48];
	fma.rn.f64 	%fd221, %fd213, %fd220, %fd219;
	mul.f64 	%fd222, %fd214, %fd220;
	fma.rn.f64 	%fd223, %fd213, %fd217, %fd222;
	mul.f64 	%fd224, %fd248, %fd223;
	neg.f64 	%fd225, %fd224;
	fma.rn.f64 	%fd226, %fd43, %fd221, %fd225;
	cvta.to.global.u64 	%rd35, %rd39;
	mul.wide.s32 	%rd36, %r131, 16;
	add.s64 	%rd37, %rd35, %rd36;
	ld.global.v2.f64 	{%fd227, %fd228}, [%rd37];
	mul.f64 	%fd231, %fd248, %fd221;
	fma.rn.f64 	%fd232, %fd43, %fd223, %fd231;
	fma.rn.f64 	%fd233, %fd212, %fd232, %fd228;
	fma.rn.f64 	%fd234, %fd212, %fd226, %fd227;
	st.global.v2.f64 	[%rd37], {%fd234, %fd233};

BB0_71:
	ret;
}

.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32	%p1, %r51, 0;
	@%p1 bra 	BB1_2;

	mul.f64 	%fd13, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd13;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

BB1_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32	%p2, %r18, 1073127583;
	@%p2 bra 	BB1_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

BB1_4:
	add.f64 	%fd14, %fd135, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd15, %fd14;
	neg.f64 	%fd16, %fd14;
	mov.f64 	%fd17, 0d3FF0000000000000;
	fma.rn.f64 	%fd18, %fd16, %fd15, %fd17;
	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd15, %fd15;
	add.f64 	%fd21, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd22, %fd21, %fd20;
	fma.rn.f64 	%fd23, %fd21, %fd20, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd26, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F6249249242B910;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F89999999999DFB;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	sub.f64 	%fd38, %fd21, %fd23;
	add.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd23;
	fma.rn.f64 	%fd41, %fd40, %fd21, %fd39;
	mul.f64 	%fd42, %fd20, %fd41;
	fma.rn.f64 	%fd43, %fd24, %fd37, 0d3FB5555555555555;
	mov.f64 	%fd44, 0d3FB5555555555555;
	sub.f64 	%fd45, %fd44, %fd43;
	fma.rn.f64 	%fd46, %fd24, %fd37, %fd45;
	add.f64 	%fd47, %fd46, 0d0000000000000000;
	add.f64 	%fd48, %fd47, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd49, %fd43, %fd48;
	sub.f64 	%fd50, %fd43, %fd49;
	add.f64 	%fd51, %fd48, %fd50;
	mul.rn.f64 	%fd52, %fd23, %fd23;
	neg.f64 	%fd53, %fd52;
	fma.rn.f64 	%fd54, %fd23, %fd23, %fd53;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd42;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd42;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd55, {%r22, %r24};
	fma.rn.f64 	%fd56, %fd23, %fd55, %fd54;
	mul.rn.f64 	%fd57, %fd52, %fd23;
	neg.f64 	%fd58, %fd57;
	fma.rn.f64 	%fd59, %fd52, %fd23, %fd58;
	fma.rn.f64 	%fd60, %fd52, %fd42, %fd59;
	fma.rn.f64 	%fd61, %fd56, %fd23, %fd60;
	mul.rn.f64 	%fd62, %fd49, %fd57;
	neg.f64 	%fd63, %fd62;
	fma.rn.f64 	%fd64, %fd49, %fd57, %fd63;
	fma.rn.f64 	%fd65, %fd49, %fd61, %fd64;
	fma.rn.f64 	%fd66, %fd51, %fd57, %fd65;
	add.f64 	%fd67, %fd62, %fd66;
	sub.f64 	%fd68, %fd62, %fd67;
	add.f64 	%fd69, %fd66, %fd68;
	add.f64 	%fd70, %fd23, %fd67;
	sub.f64 	%fd71, %fd23, %fd70;
	add.f64 	%fd72, %fd67, %fd71;
	add.f64 	%fd73, %fd69, %fd72;
	add.f64 	%fd74, %fd42, %fd73;
	add.f64 	%fd75, %fd70, %fd74;
	sub.f64 	%fd76, %fd70, %fd75;
	add.f64 	%fd77, %fd74, %fd76;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd78, {%r25, %r27};
	mov.b64 	%fd79, {%r26, %r27};
	sub.f64 	%fd80, %fd78, %fd79;
	mov.f64 	%fd81, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd82, %fd80, %fd81, %fd75;
	neg.f64 	%fd83, %fd80;
	fma.rn.f64 	%fd84, %fd83, %fd81, %fd82;
	sub.f64 	%fd85, %fd84, %fd75;
	sub.f64 	%fd86, %fd77, %fd85;
	mov.f64 	%fd87, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd88, %fd80, %fd87, %fd86;
	add.f64 	%fd89, %fd82, %fd88;
	sub.f64 	%fd90, %fd82, %fd89;
	add.f64 	%fd91, %fd88, %fd90;
	mov.f64 	%fd92, 0d3FF8000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd92;
	}
	add.s32 	%r29, %r28, %r28;
	setp.gt.u32	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd92;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd89, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd89, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd91, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd17;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd17;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	 %f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p4, %f1, 0f4086232B;
	@%p4 bra 	BB1_7;

	setp.lt.f64	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32	%p6, %f1, 0f40874800;
	@%p6 bra 	BB1_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r39, %r15;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

BB1_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.ne.s32	%p7, %r46, 2146435072;
	@%p7 bra 	BB1_9;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32	%p8, %r47, 0;
	@%p8 bra 	BB1_10;

BB1_9:
	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

BB1_10:
	st.param.f64	[func_retval0+0], %fd136;
	ret;
}


