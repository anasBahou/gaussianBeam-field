//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_60
.address_size 64

	// .globl	_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4_
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.const .align 8 .b8 box_min[24];
.const .align 8 .b8 box_max[24];
.const .align 8 .f64 sigt;
.const .align 4 .u32 dirDimNum;
.const .align 4 .b8 uDimProd[20];
.const .align 4 .b8 lDim[20];
.const .align 4 .b8 vDim[20];
.const .align 4 .u32 mixturesNum;
.const .align 8 .b8 lMixtureAlpha[256];
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4_(
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_0,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_1,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_2,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_3,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_4,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_5,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_6,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_7,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_8,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_9,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_10,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_11,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_12,
	.param .u64 _Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_13
)
{
	.local .align 4 .b8 	__local_depot0[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<47>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<183>;
	.reg .f64 	%fd<593>;
	.reg .b64 	%rd<106>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd47, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_1];
	ld.param.u64 	%rd48, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_2];
	ld.param.u64 	%rd36, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_3];
	ld.param.u64 	%rd37, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_4];
	ld.param.u64 	%rd38, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_5];
	ld.param.u64 	%rd39, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_6];
	ld.param.u64 	%rd40, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_7];
	ld.param.u64 	%rd41, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_8];
	ld.param.u64 	%rd42, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_9];
	ld.param.u64 	%rd43, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_10];
	ld.param.u64 	%rd44, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_11];
	ld.param.u64 	%rd45, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_12];
	ld.param.u64 	%rd46, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_13];
	cvta.to.global.u64 	%rd1, %rd48;
	cvta.to.global.u64 	%rd2, %rd47;
	add.u64 	%rd49, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	add.u64 	%rd5, %SPL, 4;
	mov.u32 	%r32, %ntid.x;
	mov.u32 	%r33, %ctaid.x;
	mov.u32 	%r34, %tid.x;
	mad.lo.s32 	%r1, %r32, %r33, %r34;
	ld.const.u32 	%r35, [uDimProd+16];
	setp.ge.s32	%p1, %r1, %r35;
	@%p1 bra 	BB0_46;

	cvta.to.global.u64 	%rd52, %rd38;
	ld.const.u32 	%r36, [uDimProd+12];
	div.s32 	%r2, %r1, %r36;
	st.local.u32 	[%rd5+16], %r2;
	mov.u32 	%r180, 0;
	st.local.u32 	[%rd5+12], %r180;
	mul.lo.s32 	%r38, %r36, %r2;
	sub.s32 	%r39, %r1, %r38;
	ld.const.u32 	%r40, [uDimProd+4];
	div.s32 	%r3, %r39, %r40;
	st.local.u32 	[%rd5+8], %r3;
	mul.lo.s32 	%r4, %r40, %r3;
	sub.s32 	%r41, %r39, %r4;
	ld.const.u32 	%r5, [uDimProd];
	div.s32 	%r6, %r41, %r5;
	st.local.u32 	[%rd5+4], %r6;
	rem.s32 	%r7, %r1, %r5;
	st.local.u32 	[%rd5], %r7;
	cvt.s64.s32	%rd7, %r2;
	add.s64 	%rd53, %rd52, %rd7;
	ld.global.u8 	%rs1, [%rd53];
	setp.eq.s16	%p2, %rs1, 0;
	@%p2 bra 	BB0_46;

	cvta.to.global.u64 	%rd54, %rd36;
	ld.const.u32 	%r43, [lDim+4];
	setp.gt.s32	%p3, %r43, 1;
	selp.b32	%r44, %r7, 0, %p3;
	ld.const.u32 	%r45, [lDim+8];
	setp.gt.s32	%p4, %r45, 1;
	selp.b32	%r46, %r43, 0, %p4;
	mad.lo.s32 	%r47, %r46, %r6, %r44;
	mul.lo.s32 	%r48, %r45, %r43;
	ld.const.u32 	%r49, [lDim+12];
	setp.gt.s32	%p5, %r49, 1;
	selp.b32	%r50, %r48, 0, %p5;
	mad.lo.s32 	%r51, %r50, %r3, %r47;
	mul.lo.s32 	%r9, %r48, %r49;
	ld.const.u32 	%r52, [lDim+16];
	mul.lo.s32 	%r53, %r9, %r52;
	mad.lo.s32 	%r10, %r53, %r2, %r51;
	mov.u64 	%rd55, vDim;
	ld.const.u32 	%r54, [vDim+4];
	setp.gt.s32	%p6, %r54, 1;
	selp.b32	%r55, %r7, 0, %p6;
	ld.const.u32 	%r56, [vDim+8];
	setp.gt.s32	%p7, %r56, 1;
	selp.b32	%r57, %r54, 0, %p7;
	mad.lo.s32 	%r58, %r57, %r6, %r55;
	mul.lo.s32 	%r59, %r56, %r54;
	ld.const.u32 	%r60, [vDim+12];
	setp.gt.s32	%p8, %r60, 1;
	selp.b32	%r61, %r59, 0, %p8;
	mad.lo.s32 	%r11, %r61, %r3, %r58;
	mul.lo.s32 	%r12, %r59, %r60;
	ld.const.u32 	%r62, [dirDimNum];
	add.s32 	%r63, %r62, -2;
	mul.wide.s32 	%rd56, %r63, 4;
	add.s64 	%rd8, %rd5, %rd56;
	add.s32 	%r64, %r62, -1;
	mul.wide.s32 	%rd57, %r64, 4;
	add.s64 	%rd58, %rd55, %rd57;
	ld.const.u32 	%r13, [%rd58];
	mul.lo.s32 	%r65, %r2, 3;
	mul.wide.s32 	%rd59, %r65, 8;
	add.s64 	%rd9, %rd54, %rd59;
	mul.wide.s32 	%rd60, %r10, 16;
	add.s64 	%rd61, %rd2, %rd60;
	ld.global.v2.f64 	{%fd135, %fd136}, [%rd61];
	ld.local.u32 	%r66, [%rd8];
	mul.lo.s32 	%r67, %r66, 3;
	mul.wide.s32 	%rd62, %r67, 8;
	add.s64 	%rd10, %rd1, %rd62;
	ld.global.f64 	%fd3, [%rd10];
	setp.gtu.f64	%p9, %fd3, 0d0000000000000000;
	@%p9 bra 	BB0_4;
	bra.uni 	BB0_3;

BB0_4:
	ld.const.f64 	%fd563, [box_max];
	ld.global.f64 	%fd562, [%rd9];
	mov.f64 	%fd564, %fd562;
	bra.uni 	BB0_5;

BB0_3:
	ld.global.f64 	%fd562, [%rd9];
	ld.const.f64 	%fd564, [box_min];
	mov.f64 	%fd563, %fd562;

BB0_5:
	abs.f64 	%fd11, %fd3;
	ld.global.f64 	%fd12, [%rd10+8];
	setp.gtu.f64	%p10, %fd12, 0d0000000000000000;
	@%p10 bra 	BB0_7;
	bra.uni 	BB0_6;

BB0_7:
	ld.const.f64 	%fd566, [box_max+8];
	ld.global.f64 	%fd565, [%rd9+8];
	mov.f64 	%fd567, %fd565;
	bra.uni 	BB0_8;

BB0_6:
	ld.global.f64 	%fd565, [%rd9+8];
	ld.const.f64 	%fd567, [box_min+8];
	mov.f64 	%fd566, %fd565;

BB0_8:
	abs.f64 	%fd20, %fd12;
	ld.global.f64 	%fd21, [%rd10+16];
	setp.gtu.f64	%p11, %fd21, 0d0000000000000000;
	sub.f64 	%fd137, %fd563, %fd564;
	div.rn.f64 	%fd22, %fd137, %fd11;
	@%p11 bra 	BB0_10;
	bra.uni 	BB0_9;

BB0_10:
	ld.const.f64 	%fd569, [box_max+16];
	ld.global.f64 	%fd568, [%rd9+16];
	mov.f64 	%fd570, %fd568;
	bra.uni 	BB0_11;

BB0_9:
	ld.global.f64 	%fd568, [%rd9+16];
	ld.const.f64 	%fd570, [box_min+16];
	mov.f64 	%fd569, %fd568;

BB0_11:
	cvta.to.global.u64 	%rd11, %rd45;
	cvta.to.global.u64 	%rd12, %rd44;
	cvta.to.global.u64 	%rd13, %rd43;
	cvta.to.global.u64 	%rd15, %rd37;
	cvta.to.global.u64 	%rd16, %rd42;
	cvta.to.global.u64 	%rd17, %rd41;
	cvta.to.global.u64 	%rd18, %rd40;
	cvta.to.global.u64 	%rd19, %rd39;
	mov.u32 	%r68, 1;
	abs.f64 	%fd142, %fd21;
	sub.f64 	%fd143, %fd569, %fd570;
	div.rn.f64 	%fd144, %fd143, %fd142;
	sub.f64 	%fd145, %fd566, %fd567;
	div.rn.f64 	%fd146, %fd145, %fd20;
	min.f64 	%fd147, %fd22, %fd146;
	min.f64 	%fd32, %fd147, %fd144;
	st.local.u32 	[%rd5+12], %r68;
	ld.const.u32 	%r69, [lDim];
	mad.lo.s32 	%r14, %r9, %r69, %r10;
	ld.local.u32 	%r70, [%rd8];
	add.s32 	%r71, %r13, %r70;
	mul.lo.s32 	%r72, %r71, 3;
	mul.wide.s32 	%rd63, %r72, 8;
	add.s64 	%rd20, %rd1, %rd63;
	add.s32 	%r15, %r12, %r11;
	ld.const.u32 	%r16, [mixturesNum];
	mov.f64 	%fd589, 0d0000000000000000;
	mov.f64 	%fd591, 0d8000000000000000;
	setp.lt.s32	%p12, %r16, 1;
	mov.f64 	%fd590, %fd589;
	mov.f64 	%fd592, %fd589;
	@%p12 bra 	BB0_45;

	mul.wide.s32 	%rd65, %r11, 16;
	add.s64 	%rd66, %rd19, %rd65;
	ld.global.v2.f64 	{%fd152, %fd153}, [%rd66];
	mul.f64 	%fd154, %fd562, 0d401921FB54442D18;
	sub.f64 	%fd33, %fd153, %fd154;
	add.s64 	%rd67, %rd18, %rd65;
	ld.global.v2.f64 	{%fd156, %fd157}, [%rd67];
	mul.f64 	%fd158, %fd565, 0d401921FB54442D18;
	sub.f64 	%fd34, %fd157, %fd158;
	add.s64 	%rd68, %rd17, %rd65;
	ld.global.v2.f64 	{%fd160, %fd161}, [%rd68];
	mul.f64 	%fd162, %fd568, 0d401921FB54442D18;
	sub.f64 	%fd35, %fd161, %fd162;
	add.s64 	%rd69, %rd16, %rd65;
	ld.global.v2.f64 	{%fd164, %fd165}, [%rd69];
	ld.const.f64 	%fd166, [sigt];
	mul.wide.s32 	%rd70, %r14, 16;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.v2.f64 	{%fd167, %fd168}, [%rd71];
	ld.global.f64 	%fd169, [%rd20];
	setp.gtu.f64	%p13, %fd169, 0d0000000000000000;
	ld.const.f64 	%fd170, [box_max];
	ld.const.f64 	%fd171, [box_min];
	ld.global.f64 	%fd172, [%rd20+8];
	setp.gtu.f64	%p14, %fd172, 0d0000000000000000;
	ld.const.f64 	%fd173, [box_max+8];
	ld.const.f64 	%fd174, [box_min+8];
	ld.global.f64 	%fd175, [%rd20+16];
	setp.gtu.f64	%p15, %fd175, 0d0000000000000000;
	ld.const.f64 	%fd176, [box_max+16];
	ld.const.f64 	%fd177, [box_min+16];
	mul.wide.s32 	%rd72, %r15, 16;
	add.s64 	%rd73, %rd19, %rd72;
	ld.global.v2.f64 	{%fd178, %fd179}, [%rd73];
	sub.f64 	%fd38, %fd179, %fd154;
	add.s64 	%rd74, %rd18, %rd72;
	ld.global.v2.f64 	{%fd181, %fd182}, [%rd74];
	sub.f64 	%fd39, %fd182, %fd158;
	add.s64 	%rd75, %rd17, %rd72;
	ld.global.v2.f64 	{%fd184, %fd185}, [%rd75];
	sub.f64 	%fd40, %fd185, %fd162;
	add.s64 	%rd76, %rd16, %rd72;
	ld.global.v2.f64 	{%fd187, %fd188}, [%rd76];
	mul.wide.s32 	%rd77, %r2, 16;
	add.s64 	%rd78, %rd15, %rd77;
	ld.global.v2.f64 	{%fd189, %fd190}, [%rd78];
	cvt.u32.u64	%r74, %rd7;
	mov.f64 	%fd191, 0d7FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd191;
	}
	mul.lo.s32 	%r75, %r16, %r74;
	mul.wide.s32 	%rd79, %r75, 8;
	add.s64 	%rd103, %rd11, %rd79;
	add.s64 	%rd102, %rd12, %rd79;
	add.s64 	%rd101, %rd13, %rd79;
	cvta.to.global.u64 	%rd105, %rd46;
	abs.f64 	%fd192, %fd172;
	selp.f64	%fd193, %fd565, %fd174, %p14;
	selp.f64	%fd194, %fd173, %fd565, %p14;
	sub.f64 	%fd195, %fd194, %fd193;
	div.rn.f64 	%fd196, %fd195, %fd192;
	abs.f64 	%fd197, %fd169;
	selp.f64	%fd198, %fd562, %fd171, %p13;
	selp.f64	%fd199, %fd170, %fd562, %p13;
	sub.f64 	%fd200, %fd199, %fd198;
	div.rn.f64 	%fd201, %fd200, %fd197;
	min.f64 	%fd202, %fd201, %fd196;
	abs.f64 	%fd203, %fd175;
	selp.f64	%fd204, %fd568, %fd177, %p15;
	selp.f64	%fd205, %fd176, %fd568, %p15;
	sub.f64 	%fd206, %fd205, %fd204;
	div.rn.f64 	%fd207, %fd206, %fd203;
	min.f64 	%fd208, %fd202, %fd207;
	abs.f64 	%fd209, %fd208;
	mul.f64 	%fd210, %fd209, %fd166;
	sub.f64 	%fd43, %fd187, %fd210;
	abs.f64 	%fd212, %fd32;
	mul.f64 	%fd213, %fd212, %fd166;
	sub.f64 	%fd48, %fd164, %fd213;
	mov.f64 	%fd589, 0d0000000000000000;
	mov.u64 	%rd104, lMixtureAlpha;
	mov.f64 	%fd590, %fd589;
	mov.f64 	%fd573, %fd589;
	mov.f64 	%fd592, %fd589;

BB0_13:
	mov.u32 	%r176, 0;
	ld.global.f64 	%fd57, [%rd101];
	add.f64 	%fd219, %fd152, %fd57;
	sub.f64 	%fd220, %fd219, %fd33;
	add.f64 	%fd221, %fd33, %fd219;
	add.f64 	%fd222, %fd219, %fd219;
	ld.global.f64 	%fd58, [%rd102];
	add.f64 	%fd223, %fd156, %fd58;
	sub.f64 	%fd224, %fd223, %fd34;
	add.f64 	%fd225, %fd34, %fd223;
	mul.f64 	%fd226, %fd224, %fd225;
	add.f64 	%fd227, %fd223, %fd223;
	mul.f64 	%fd228, %fd34, %fd227;
	fma.rn.f64 	%fd229, %fd220, %fd221, %fd226;
	fma.rn.f64 	%fd230, %fd33, %fd222, %fd228;
	ld.global.f64 	%fd59, [%rd103];
	add.f64 	%fd231, %fd160, %fd59;
	sub.f64 	%fd232, %fd231, %fd35;
	add.f64 	%fd233, %fd35, %fd231;
	add.f64 	%fd234, %fd231, %fd231;
	fma.rn.f64 	%fd235, %fd232, %fd233, %fd229;
	fma.rn.f64 	%fd60, %fd35, %fd234, %fd230;
	abs.f64 	%fd236, %fd235;
	abs.f64 	%fd237, %fd60;
	mov.b64 	 %rd80, %fd237;
	mov.b64 	 %rd81, %fd236;
	min.u64 	%rd82, %rd80, %rd81;
	mov.b64 	 %fd238, %rd82;
	max.u64 	%rd83, %rd81, %rd80;
	mov.b64 	 %fd239, %rd83;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r76}, %fd239;
	}
	and.b32  	%r77, %r76, -4194304;
	mov.u32 	%r78, 2144337920;
	sub.s32 	%r79, %r78, %r77;
	mov.b64 	%fd240, {%r176, %r79};
	mul.f64 	%fd241, %fd238, %fd240;
	mul.f64 	%fd242, %fd239, %fd240;
	mul.f64 	%fd243, %fd241, %fd241;
	fma.rn.f64 	%fd244, %fd242, %fd242, %fd243;
	mov.f64 	%fd245, 0d7FEFFFFFFFFFFFFF;
	min.f64 	%fd216, %fd244, %fd245;
	// inline asm
	rsqrt.approx.ftz.f64 %fd215, %fd216;
	// inline asm
	mul.rn.f64 	%fd246, %fd215, %fd215;
	neg.f64 	%fd247, %fd246;
	mov.f64 	%fd248, 0d3FF0000000000000;
	fma.rn.f64 	%fd249, %fd216, %fd247, %fd248;
	mov.f64 	%fd250, 0d3FE0000000000000;
	mov.f64 	%fd251, 0d3FD8000000000000;
	fma.rn.f64 	%fd252, %fd251, %fd249, %fd250;
	mul.rn.f64 	%fd253, %fd249, %fd215;
	fma.rn.f64 	%fd254, %fd252, %fd253, %fd215;
	mul.f64 	%fd255, %fd244, %fd254;
	add.s32 	%r81, %r77, 1048576;
	mov.b64 	%fd256, {%r176, %r81};
	mul.f64 	%fd257, %fd255, %fd256;
	setp.eq.f64	%p16, %fd238, 0d0000000000000000;
	selp.f64	%fd258, %fd239, %fd257, %p16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r82}, %fd238;
	}
	setp.lt.u32	%p17, %r82, %r17;
	selp.f64	%fd259, %fd258, %fd238, %p17;
	sqrt.rn.f64 	%fd61, %fd259;
	add.f64 	%fd62, %fd235, %fd259;
	abs.f64 	%fd260, %fd62;
	mov.b64 	 %rd84, %fd260;
	min.u64 	%rd85, %rd80, %rd84;
	mov.b64 	 %fd63, %rd85;
	max.u64 	%rd86, %rd84, %rd80;
	mov.b64 	 %fd64, %rd86;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r83}, %fd64;
	}
	and.b32  	%r84, %r83, -4194304;
	sub.s32 	%r85, %r78, %r84;
	mov.b64 	%fd261, {%r176, %r85};
	mul.f64 	%fd262, %fd63, %fd261;
	mul.f64 	%fd263, %fd64, %fd261;
	mul.f64 	%fd264, %fd262, %fd262;
	fma.rn.f64 	%fd218, %fd263, %fd263, %fd264;
	// inline asm
	rsqrt.approx.ftz.f64 %fd217, %fd218;
	// inline asm
	mul.rn.f64 	%fd265, %fd217, %fd217;
	neg.f64 	%fd266, %fd265;
	fma.rn.f64 	%fd267, %fd218, %fd266, %fd248;
	fma.rn.f64 	%fd268, %fd251, %fd267, %fd250;
	mul.rn.f64 	%fd269, %fd267, %fd217;
	fma.rn.f64 	%fd270, %fd268, %fd269, %fd217;
	mul.f64 	%fd576, %fd261, %fd270;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r86}, %fd576;
	}
	setp.lt.u32	%p18, %r86, %r17;
	@%p18 bra 	BB0_18;

	abs.f64 	%fd271, %fd64;
	setp.gtu.f64	%p19, %fd271, 0d7FF0000000000000;
	@%p19 bra 	BB0_16;
	bra.uni 	BB0_15;

BB0_16:
	add.f64 	%fd575, %fd63, %fd64;
	bra.uni 	BB0_17;

BB0_15:
	setp.neu.f64	%p20, %fd64, 0d7FF0000000000000;
	selp.b32	%r87, %r17, 0, %p20;
	mov.u32 	%r88, 0;
	mov.b64 	%fd575, {%r88, %r87};

BB0_17:
	setp.eq.f64	%p21, %fd63, 0d7FF0000000000000;
	selp.f64	%fd576, 0d0000000000000000, %fd575, %p21;

BB0_18:
	mul.f64 	%fd276, %fd61, %fd576;
	mul.f64 	%fd71, %fd62, %fd276;
	mul.f64 	%fd72, %fd60, %fd276;
	add.f64 	%fd277, %fd178, %fd57;
	sub.f64 	%fd278, %fd277, %fd38;
	add.f64 	%fd279, %fd38, %fd277;
	add.f64 	%fd280, %fd277, %fd277;
	add.f64 	%fd281, %fd181, %fd58;
	sub.f64 	%fd282, %fd281, %fd39;
	add.f64 	%fd283, %fd39, %fd281;
	mul.f64 	%fd284, %fd282, %fd283;
	add.f64 	%fd285, %fd281, %fd281;
	mul.f64 	%fd286, %fd39, %fd285;
	fma.rn.f64 	%fd287, %fd278, %fd279, %fd284;
	fma.rn.f64 	%fd288, %fd38, %fd280, %fd286;
	add.f64 	%fd289, %fd184, %fd59;
	sub.f64 	%fd290, %fd289, %fd40;
	add.f64 	%fd291, %fd40, %fd289;
	add.f64 	%fd292, %fd289, %fd289;
	fma.rn.f64 	%fd293, %fd290, %fd291, %fd287;
	fma.rn.f64 	%fd73, %fd40, %fd292, %fd288;
	abs.f64 	%fd294, %fd293;
	abs.f64 	%fd295, %fd73;
	mov.b64 	 %rd87, %fd295;
	mov.b64 	 %rd88, %fd294;
	min.u64 	%rd89, %rd87, %rd88;
	mov.b64 	 %fd296, %rd89;
	max.u64 	%rd90, %rd88, %rd87;
	mov.b64 	 %fd297, %rd90;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r89}, %fd297;
	}
	and.b32  	%r90, %r89, -4194304;
	sub.s32 	%r92, %r78, %r90;
	mov.u32 	%r93, 0;
	mov.b64 	%fd298, {%r93, %r92};
	mul.f64 	%fd299, %fd296, %fd298;
	mul.f64 	%fd300, %fd297, %fd298;
	mul.f64 	%fd301, %fd299, %fd299;
	fma.rn.f64 	%fd302, %fd300, %fd300, %fd301;
	min.f64 	%fd273, %fd302, %fd245;
	// inline asm
	rsqrt.approx.ftz.f64 %fd272, %fd273;
	// inline asm
	mul.rn.f64 	%fd304, %fd272, %fd272;
	neg.f64 	%fd305, %fd304;
	fma.rn.f64 	%fd307, %fd273, %fd305, %fd248;
	fma.rn.f64 	%fd310, %fd251, %fd307, %fd250;
	mul.rn.f64 	%fd311, %fd307, %fd272;
	fma.rn.f64 	%fd312, %fd310, %fd311, %fd272;
	mul.f64 	%fd313, %fd302, %fd312;
	add.s32 	%r94, %r90, 1048576;
	mov.b64 	%fd314, {%r93, %r94};
	mul.f64 	%fd315, %fd313, %fd314;
	setp.eq.f64	%p22, %fd296, 0d0000000000000000;
	selp.f64	%fd316, %fd297, %fd315, %p22;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r95}, %fd296;
	}
	setp.lt.u32	%p23, %r95, %r17;
	selp.f64	%fd317, %fd316, %fd296, %p23;
	sqrt.rn.f64 	%fd74, %fd317;
	add.f64 	%fd75, %fd293, %fd317;
	abs.f64 	%fd318, %fd75;
	mov.b64 	 %rd91, %fd318;
	min.u64 	%rd92, %rd87, %rd91;
	mov.b64 	 %fd76, %rd92;
	max.u64 	%rd93, %rd91, %rd87;
	mov.b64 	 %fd77, %rd93;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r96}, %fd77;
	}
	and.b32  	%r97, %r96, -4194304;
	sub.s32 	%r98, %r78, %r97;
	mov.b64 	%fd319, {%r93, %r98};
	mul.f64 	%fd320, %fd76, %fd319;
	mul.f64 	%fd321, %fd77, %fd319;
	mul.f64 	%fd322, %fd320, %fd320;
	fma.rn.f64 	%fd275, %fd321, %fd321, %fd322;
	// inline asm
	rsqrt.approx.ftz.f64 %fd274, %fd275;
	// inline asm
	mul.rn.f64 	%fd323, %fd274, %fd274;
	neg.f64 	%fd324, %fd323;
	fma.rn.f64 	%fd325, %fd275, %fd324, %fd248;
	fma.rn.f64 	%fd326, %fd251, %fd325, %fd250;
	mul.rn.f64 	%fd327, %fd325, %fd274;
	fma.rn.f64 	%fd328, %fd326, %fd327, %fd274;
	mul.f64 	%fd578, %fd319, %fd328;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r99}, %fd578;
	}
	setp.lt.u32	%p24, %r99, %r17;
	@%p24 bra 	BB0_23;

	abs.f64 	%fd329, %fd77;
	setp.gtu.f64	%p25, %fd329, 0d7FF0000000000000;
	@%p25 bra 	BB0_21;
	bra.uni 	BB0_20;

BB0_21:
	add.f64 	%fd577, %fd76, %fd77;
	bra.uni 	BB0_22;

BB0_20:
	mov.u32 	%r177, 0;
	setp.neu.f64	%p26, %fd77, 0d7FF0000000000000;
	selp.b32	%r100, %r17, 0, %p26;
	mov.b64 	%fd577, {%r177, %r100};

BB0_22:
	setp.eq.f64	%p27, %fd76, 0d7FF0000000000000;
	selp.f64	%fd578, 0d0000000000000000, %fd577, %p27;

BB0_23:
	mov.f64 	%fd541, 0d3FF0000000000000;
	mul.f64 	%fd330, %fd74, %fd578;
	mul.f64 	%fd84, %fd75, %fd330;
	mul.f64 	%fd85, %fd73, %fd330;
	ld.const.f64 	%fd331, [%rd104];
	mul.f64 	%fd86, %fd189, %fd331;
	mul.f64 	%fd87, %fd190, %fd331;
	mul.f64 	%fd332, %fd136, %fd87;
	neg.f64 	%fd333, %fd332;
	fma.rn.f64 	%fd88, %fd86, %fd135, %fd333;
	mul.f64 	%fd334, %fd135, %fd87;
	fma.rn.f64 	%fd89, %fd86, %fd136, %fd334;
	ld.global.f64 	%fd335, [%rd105];
	add.f64 	%fd336, %fd48, %fd335;
	add.f64 	%fd90, %fd71, %fd336;
	add.f64 	%fd580, %fd165, %fd72;
	mov.f64 	%fd337, 0d4338000000000000;
	mov.f64 	%fd338, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd339, %fd90, %fd338, %fd337;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd339;
	}
	mov.f64 	%fd340, 0dC338000000000000;
	add.rn.f64 	%fd341, %fd339, %fd340;
	mov.f64 	%fd342, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd343, %fd341, %fd342, %fd90;
	mov.f64 	%fd344, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd345, %fd341, %fd344, %fd343;
	mov.f64 	%fd346, 0d3E928AF3FCA213EA;
	mov.f64 	%fd347, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd348, %fd347, %fd345, %fd346;
	mov.f64 	%fd349, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd350, %fd348, %fd345, %fd349;
	mov.f64 	%fd351, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd352, %fd350, %fd345, %fd351;
	mov.f64 	%fd353, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd354, %fd352, %fd345, %fd353;
	mov.f64 	%fd355, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd356, %fd354, %fd345, %fd355;
	mov.f64 	%fd357, 0d3F81111111122322;
	fma.rn.f64 	%fd358, %fd356, %fd345, %fd357;
	mov.f64 	%fd359, 0d3FA55555555502A1;
	fma.rn.f64 	%fd360, %fd358, %fd345, %fd359;
	mov.f64 	%fd361, 0d3FC5555555555511;
	fma.rn.f64 	%fd362, %fd360, %fd345, %fd361;
	mov.f64 	%fd363, 0d3FE000000000000B;
	fma.rn.f64 	%fd364, %fd362, %fd345, %fd363;
	fma.rn.f64 	%fd366, %fd364, %fd345, %fd541;
	fma.rn.f64 	%fd367, %fd366, %fd345, %fd541;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r20, %temp}, %fd367;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd367;
	}
	shl.b32 	%r102, %r19, 20;
	add.s32 	%r103, %r21, %r102;
	mov.b64 	%fd579, {%r20, %r103};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r104}, %fd90;
	}
	mov.b32 	 %f3, %r104;
	abs.f32 	%f1, %f3;
	setp.lt.f32	%p28, %f1, 0f4086232B;
	@%p28 bra 	BB0_26;

	setp.lt.f64	%p29, %fd90, 0d0000000000000000;
	add.f64 	%fd368, %fd90, 0d7FF0000000000000;
	selp.f64	%fd579, 0d0000000000000000, %fd368, %p29;
	setp.geu.f32	%p30, %f1, 0f40874800;
	@%p30 bra 	BB0_26;

	mov.u32 	%r179, 0;
	shr.u32 	%r105, %r19, 31;
	add.s32 	%r106, %r19, %r105;
	shr.s32 	%r107, %r106, 1;
	shl.b32 	%r108, %r107, 20;
	add.s32 	%r109, %r108, %r21;
	mov.b64 	%fd369, {%r20, %r109};
	sub.s32 	%r110, %r19, %r107;
	shl.b32 	%r111, %r110, 20;
	add.s32 	%r112, %r111, 1072693248;
	mov.b64 	%fd370, {%r179, %r112};
	mul.f64 	%fd579, %fd369, %fd370;

BB0_26:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r114}, %fd580;
	}
	and.b32  	%r115, %r114, 2147483647;
	setp.ne.s32	%p31, %r115, 2146435072;
	@%p31 bra 	BB0_29;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r116, %temp}, %fd580;
	}
	setp.ne.s32	%p32, %r116, 0;
	@%p32 bra 	BB0_29;

	mov.f64 	%fd371, 0d0000000000000000;
	mul.rn.f64 	%fd580, %fd580, %fd371;

BB0_29:
	mul.f64 	%fd372, %fd580, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r181, %fd372;
	st.local.u32 	[%rd3], %r181;
	cvt.rn.f64.s32	%fd373, %r181;
	neg.f64 	%fd374, %fd373;
	mov.f64 	%fd375, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd376, %fd374, %fd375, %fd580;
	mov.f64 	%fd377, 0d3C91A62633145C00;
	fma.rn.f64 	%fd378, %fd374, %fd377, %fd376;
	mov.f64 	%fd379, 0d397B839A252049C0;
	fma.rn.f64 	%fd581, %fd374, %fd379, %fd378;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r117}, %fd580;
	}
	and.b32  	%r118, %r117, 2145386496;
	setp.lt.u32	%p33, %r118, 1105199104;
	@%p33 bra 	BB0_31;

	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd580;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd581, [retval0+0];
	
	//{
	}// Callseq End 0
	ld.local.u32 	%r181, [%rd3];

BB0_31:
	mov.f64 	%fd542, 0d3FF0000000000000;
	mul.rn.f64 	%fd380, %fd581, %fd581;
	mov.f64 	%fd381, 0d3E21EEA7C1EF8528;
	mov.f64 	%fd382, 0dBDA8FF8320FD8164;
	fma.rn.f64 	%fd383, %fd382, %fd380, %fd381;
	mov.f64 	%fd384, 0dBE927E4F8E06E6D9;
	fma.rn.f64 	%fd385, %fd383, %fd380, %fd384;
	mov.f64 	%fd386, 0d3EFA01A019DDBCE9;
	fma.rn.f64 	%fd387, %fd385, %fd380, %fd386;
	mov.f64 	%fd388, 0dBF56C16C16C15D47;
	fma.rn.f64 	%fd389, %fd387, %fd380, %fd388;
	mov.f64 	%fd390, 0d3FA5555555555551;
	fma.rn.f64 	%fd391, %fd389, %fd380, %fd390;
	mov.f64 	%fd392, 0dBFE0000000000000;
	fma.rn.f64 	%fd393, %fd391, %fd380, %fd392;
	fma.rn.f64 	%fd395, %fd393, %fd380, %fd542;
	mov.f64 	%fd396, 0dBE5AE5F12CB0D246;
	mov.f64 	%fd397, 0d3DE5DB65F9785EBA;
	fma.rn.f64 	%fd398, %fd397, %fd380, %fd396;
	mov.f64 	%fd399, 0d3EC71DE369ACE392;
	fma.rn.f64 	%fd400, %fd398, %fd380, %fd399;
	mov.f64 	%fd401, 0dBF2A01A019DB62A1;
	fma.rn.f64 	%fd402, %fd400, %fd380, %fd401;
	mov.f64 	%fd403, 0d3F81111111110818;
	fma.rn.f64 	%fd404, %fd402, %fd380, %fd403;
	mov.f64 	%fd405, 0dBFC5555555555554;
	fma.rn.f64 	%fd406, %fd404, %fd380, %fd405;
	mov.f64 	%fd407, 0d0000000000000000;
	fma.rn.f64 	%fd408, %fd406, %fd380, %fd407;
	fma.rn.f64 	%fd409, %fd408, %fd581, %fd581;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r119}, %fd409;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r120, %temp}, %fd409;
	}
	xor.b32  	%r121, %r119, -2147483648;
	mov.b64 	%fd410, {%r120, %r121};
	and.b32  	%r122, %r181, 1;
	setp.eq.b32	%p34, %r122, 1;
	not.pred 	%p35, %p34;
	selp.f64	%fd582, %fd409, %fd395, %p35;
	selp.f64	%fd583, %fd395, %fd410, %p35;
	and.b32  	%r123, %r181, 2;
	setp.eq.s32	%p36, %r123, 0;
	@%p36 bra 	BB0_33;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r124}, %fd582;
	}
	xor.b32  	%r125, %r124, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r126, %temp}, %fd582;
	}
	mov.b64 	%fd582, {%r126, %r125};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r127}, %fd583;
	}
	xor.b32  	%r128, %r127, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r129, %temp}, %fd583;
	}
	mov.b64 	%fd583, {%r129, %r128};

BB0_33:
	mov.f64 	%fd545, 0d3FE000000000000B;
	mov.f64 	%fd543, 0d3FF0000000000000;
	mov.f64 	%fd540, 0d3FC5555555555511;
	mov.f64 	%fd539, 0d3FA55555555502A1;
	mov.f64 	%fd538, 0d3F81111111122322;
	mov.f64 	%fd537, 0d3F56C16C1852B7AF;
	mov.f64 	%fd536, 0d3F2A01A014761F65;
	mov.f64 	%fd535, 0d3EFA01997C89EB71;
	mov.f64 	%fd534, 0d3EC71DEE62401315;
	mov.f64 	%fd533, 0d3E928AF3FCA213EA;
	mov.f64 	%fd532, 0d3E5ADE1569CE2BDF;
	mov.f64 	%fd531, 0dBC7ABC9E3B39803F;
	mov.f64 	%fd530, 0dBFE62E42FEFA39EF;
	mov.f64 	%fd529, 0dC338000000000000;
	mov.f64 	%fd528, 0d4338000000000000;
	mov.f64 	%fd527, 0d3FF71547652B82FE;
	mul.f64 	%fd411, %fd579, %fd582;
	mul.f64 	%fd412, %fd89, %fd411;
	neg.f64 	%fd413, %fd412;
	mul.f64 	%fd414, %fd579, %fd583;
	fma.rn.f64 	%fd415, %fd88, %fd414, %fd413;
	mul.f64 	%fd416, %fd89, %fd414;
	fma.rn.f64 	%fd417, %fd88, %fd411, %fd416;
	mul.f64 	%fd418, %fd72, %fd72;
	fma.rn.f64 	%fd419, %fd71, %fd71, %fd418;
	rcp.rn.f64 	%fd420, %fd419;
	mul.f64 	%fd421, %fd72, %fd417;
	fma.rn.f64 	%fd422, %fd415, %fd71, %fd421;
	mul.f64 	%fd423, %fd72, %fd415;
	neg.f64 	%fd424, %fd423;
	fma.rn.f64 	%fd425, %fd417, %fd71, %fd424;
	fma.rn.f64 	%fd590, %fd420, %fd422, %fd590;
	fma.rn.f64 	%fd589, %fd420, %fd425, %fd589;
	mul.f64 	%fd426, %fd168, %fd87;
	neg.f64 	%fd427, %fd426;
	fma.rn.f64 	%fd109, %fd86, %fd167, %fd427;
	mul.f64 	%fd428, %fd167, %fd87;
	fma.rn.f64 	%fd110, %fd86, %fd168, %fd428;
	ld.global.f64 	%fd429, [%rd105];
	add.f64 	%fd430, %fd43, %fd429;
	add.f64 	%fd111, %fd84, %fd430;
	add.f64 	%fd585, %fd188, %fd85;
	fma.rn.f64 	%fd433, %fd111, %fd527, %fd528;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r25, %temp}, %fd433;
	}
	add.rn.f64 	%fd435, %fd433, %fd529;
	fma.rn.f64 	%fd437, %fd435, %fd530, %fd111;
	fma.rn.f64 	%fd439, %fd435, %fd531, %fd437;
	fma.rn.f64 	%fd442, %fd532, %fd439, %fd533;
	fma.rn.f64 	%fd444, %fd442, %fd439, %fd534;
	fma.rn.f64 	%fd446, %fd444, %fd439, %fd535;
	fma.rn.f64 	%fd448, %fd446, %fd439, %fd536;
	fma.rn.f64 	%fd450, %fd448, %fd439, %fd537;
	fma.rn.f64 	%fd452, %fd450, %fd439, %fd538;
	fma.rn.f64 	%fd454, %fd452, %fd439, %fd539;
	fma.rn.f64 	%fd456, %fd454, %fd439, %fd540;
	fma.rn.f64 	%fd458, %fd456, %fd439, %fd545;
	fma.rn.f64 	%fd460, %fd458, %fd439, %fd543;
	fma.rn.f64 	%fd461, %fd460, %fd439, %fd543;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r26, %temp}, %fd461;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd461;
	}
	shl.b32 	%r130, %r25, 20;
	add.s32 	%r131, %r27, %r130;
	mov.b64 	%fd584, {%r26, %r131};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r132}, %fd111;
	}
	mov.b32 	 %f4, %r132;
	abs.f32 	%f2, %f4;
	setp.lt.f32	%p37, %f2, 0f4086232B;
	@%p37 bra 	BB0_36;

	setp.lt.f64	%p38, %fd111, 0d0000000000000000;
	add.f64 	%fd462, %fd111, 0d7FF0000000000000;
	selp.f64	%fd584, 0d0000000000000000, %fd462, %p38;
	setp.geu.f32	%p39, %f2, 0f40874800;
	@%p39 bra 	BB0_36;

	mov.u32 	%r178, 0;
	shr.u32 	%r133, %r25, 31;
	add.s32 	%r134, %r25, %r133;
	shr.s32 	%r135, %r134, 1;
	shl.b32 	%r136, %r135, 20;
	add.s32 	%r137, %r136, %r27;
	mov.b64 	%fd463, {%r26, %r137};
	sub.s32 	%r138, %r25, %r135;
	shl.b32 	%r139, %r138, 20;
	add.s32 	%r140, %r139, 1072693248;
	mov.b64 	%fd464, {%r178, %r140};
	mul.f64 	%fd584, %fd463, %fd464;

BB0_36:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r142}, %fd585;
	}
	and.b32  	%r143, %r142, 2147483647;
	setp.ne.s32	%p40, %r143, 2146435072;
	@%p40 bra 	BB0_39;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r144, %temp}, %fd585;
	}
	setp.ne.s32	%p41, %r144, 0;
	@%p41 bra 	BB0_39;

	mul.rn.f64 	%fd585, %fd585, %fd407;

BB0_39:
	mov.f64 	%fd548, 0d397B839A252049C0;
	mov.f64 	%fd547, 0d3C91A62633145C00;
	mov.f64 	%fd546, 0d3FF921FB54442D18;
	mul.f64 	%fd466, %fd585, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r182, %fd466;
	st.local.u32 	[%rd3], %r182;
	cvt.rn.f64.s32	%fd467, %r182;
	neg.f64 	%fd468, %fd467;
	fma.rn.f64 	%fd470, %fd468, %fd546, %fd585;
	fma.rn.f64 	%fd472, %fd468, %fd547, %fd470;
	fma.rn.f64 	%fd586, %fd468, %fd548, %fd472;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r145}, %fd585;
	}
	and.b32  	%r146, %r145, 2145386496;
	setp.lt.u32	%p42, %r146, 1105199104;
	@%p42 bra 	BB0_41;

	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd585;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd586, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.local.u32 	%r182, [%rd3];

BB0_41:
	mov.f64 	%fd561, 0dBFC5555555555554;
	mov.f64 	%fd560, 0d3F81111111110818;
	mov.f64 	%fd559, 0dBF2A01A019DB62A1;
	mov.f64 	%fd558, 0d3EC71DE369ACE392;
	mov.f64 	%fd557, 0dBE5AE5F12CB0D246;
	mov.f64 	%fd556, 0d3DE5DB65F9785EBA;
	mov.f64 	%fd555, 0dBFE0000000000000;
	mov.f64 	%fd554, 0d3FA5555555555551;
	mov.f64 	%fd553, 0dBF56C16C16C15D47;
	mov.f64 	%fd552, 0d3EFA01A019DDBCE9;
	mov.f64 	%fd551, 0dBE927E4F8E06E6D9;
	mov.f64 	%fd550, 0d3E21EEA7C1EF8528;
	mov.f64 	%fd549, 0dBDA8FF8320FD8164;
	mov.f64 	%fd544, 0d3FF0000000000000;
	mul.rn.f64 	%fd474, %fd586, %fd586;
	fma.rn.f64 	%fd477, %fd549, %fd474, %fd550;
	fma.rn.f64 	%fd479, %fd477, %fd474, %fd551;
	fma.rn.f64 	%fd481, %fd479, %fd474, %fd552;
	fma.rn.f64 	%fd483, %fd481, %fd474, %fd553;
	fma.rn.f64 	%fd485, %fd483, %fd474, %fd554;
	fma.rn.f64 	%fd487, %fd485, %fd474, %fd555;
	fma.rn.f64 	%fd489, %fd487, %fd474, %fd544;
	fma.rn.f64 	%fd492, %fd556, %fd474, %fd557;
	fma.rn.f64 	%fd494, %fd492, %fd474, %fd558;
	fma.rn.f64 	%fd496, %fd494, %fd474, %fd559;
	fma.rn.f64 	%fd498, %fd496, %fd474, %fd560;
	fma.rn.f64 	%fd500, %fd498, %fd474, %fd561;
	fma.rn.f64 	%fd502, %fd500, %fd474, %fd407;
	fma.rn.f64 	%fd503, %fd502, %fd586, %fd586;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r147}, %fd503;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r148, %temp}, %fd503;
	}
	xor.b32  	%r149, %r147, -2147483648;
	mov.b64 	%fd504, {%r148, %r149};
	and.b32  	%r150, %r182, 1;
	setp.eq.b32	%p43, %r150, 1;
	not.pred 	%p44, %p43;
	selp.f64	%fd587, %fd503, %fd489, %p44;
	selp.f64	%fd588, %fd489, %fd504, %p44;
	and.b32  	%r151, %r182, 2;
	setp.eq.s32	%p45, %r151, 0;
	@%p45 bra 	BB0_43;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r152}, %fd587;
	}
	xor.b32  	%r153, %r152, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r154, %temp}, %fd587;
	}
	mov.b64 	%fd587, {%r154, %r153};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r155}, %fd588;
	}
	xor.b32  	%r156, %r155, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r157, %temp}, %fd588;
	}
	mov.b64 	%fd588, {%r157, %r156};

BB0_43:
	ld.const.u32 	%r158, [mixturesNum];
	mul.f64 	%fd505, %fd584, %fd587;
	mul.f64 	%fd506, %fd110, %fd505;
	neg.f64 	%fd507, %fd506;
	mul.f64 	%fd508, %fd584, %fd588;
	fma.rn.f64 	%fd509, %fd109, %fd508, %fd507;
	mul.f64 	%fd510, %fd110, %fd508;
	fma.rn.f64 	%fd511, %fd109, %fd505, %fd510;
	mul.f64 	%fd512, %fd85, %fd85;
	fma.rn.f64 	%fd513, %fd84, %fd84, %fd512;
	rcp.rn.f64 	%fd514, %fd513;
	mul.f64 	%fd515, %fd85, %fd511;
	fma.rn.f64 	%fd516, %fd509, %fd84, %fd515;
	mul.f64 	%fd517, %fd85, %fd509;
	neg.f64 	%fd518, %fd517;
	fma.rn.f64 	%fd519, %fd511, %fd84, %fd518;
	fma.rn.f64 	%fd592, %fd514, %fd516, %fd592;
	fma.rn.f64 	%fd573, %fd514, %fd519, %fd573;
	add.s64 	%rd105, %rd105, 8;
	add.s64 	%rd104, %rd104, 8;
	add.s64 	%rd103, %rd103, 8;
	add.s64 	%rd102, %rd102, 8;
	add.s64 	%rd101, %rd101, 8;
	add.s32 	%r180, %r180, 1;
	setp.lt.s32	%p46, %r180, %r158;
	@%p46 bra 	BB0_13;

	neg.f64 	%fd591, %fd573;

BB0_45:
	ld.const.u32 	%r175, [uDimProd+12];
	mov.u32 	%r174, %ntid.x;
	mov.u32 	%r173, %ctaid.x;
	mov.u32 	%r172, %tid.x;
	mad.lo.s32 	%r171, %r174, %r173, %r172;
	div.s32 	%r170, %r171, %r175;
	ld.const.u32 	%r169, [uDimProd+4];
	mul.lo.s32 	%r168, %r175, %r170;
	sub.s32 	%r167, %r171, %r168;
	div.s32 	%r166, %r167, %r169;
	mul.lo.s32 	%r165, %r169, %r166;
	ld.const.u32 	%r164, [uDimProd];
	ld.param.u64 	%rd100, [_Z27MSintegrateMult_correlationP7double2PKS_PKdS4_S2_PKbS2_S2_S2_S2_S4_S4_S4_S4__param_0];
	cvta.to.global.u64 	%rd99, %rd100;
	sub.s32 	%r163, %r167, %r165;
	rem.s32 	%r162, %r171, %r164;
	div.s32 	%r161, %r163, %r164;
	mad.lo.s32 	%r160, %r164, %r161, %r162;
	add.s32 	%r159, %r160, %r165;
	mul.f64 	%fd520, %fd591, %fd589;
	neg.f64 	%fd521, %fd520;
	fma.rn.f64 	%fd522, %fd590, %fd592, %fd521;
	mul.f64 	%fd523, %fd592, %fd589;
	fma.rn.f64 	%fd524, %fd590, %fd591, %fd523;
	mul.wide.s32 	%rd96, %r159, 16;
	add.s64 	%rd97, %rd99, %rd96;
	atom.global.add.f64 	%fd525, [%rd97], %fd522;
	add.s64 	%rd98, %rd97, 8;
	atom.global.add.f64 	%fd526, [%rd98], %fd524;

BB0_46:
	ret;
}

.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<42>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<101>;


	mov.u64 	%SPL, __local_depot1;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd37, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd1, %SPL, 0;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	and.b32  	%r40, %r1, -2147483648;
	shr.u32 	%r3, %r1, 20;
	bfe.u32 	%r4, %r1, 20, 11;
	setp.eq.s32	%p1, %r4, 2047;
	@%p1 bra 	BB1_13;

	add.s32 	%r15, %r4, -1024;
	shr.u32 	%r16, %r15, 6;
	mov.u32 	%r17, 15;
	sub.s32 	%r5, %r17, %r16;
	mov.u32 	%r18, 19;
	sub.s32 	%r19, %r18, %r16;
	mov.u32 	%r20, 18;
	min.s32 	%r6, %r20, %r19;
	mov.u64 	%rd94, 0;
	setp.ge.s32	%p2, %r5, %r6;
	mov.u64 	%rd93, %rd1;
	@%p2 bra 	BB1_4;

	bfe.u32 	%r21, %r1, 20, 11;
	add.s32 	%r22, %r21, -1024;
	shr.u32 	%r23, %r22, 6;
	sub.s32 	%r25, %r17, %r23;
	mul.wide.s32 	%rd41, %r25, 8;
	mov.u64 	%rd42, __cudart_i2opi_d;
	add.s64 	%rd89, %rd42, %rd41;
	mov.b64 	 %rd43, %fd4;
	shl.b64 	%rd44, %rd43, 11;
	or.b64  	%rd5, %rd44, -9223372036854775808;
	mov.u64 	%rd94, 0;
	mov.u64 	%rd93, %rd1;
	mov.u64 	%rd91, %rd1;
	mov.u32 	%r39, %r5;

BB1_3:
	.pragma "nounroll";
	ld.const.u64 	%rd47, [%rd89];
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd47;    
	mov.b64         {blo,bhi}, %rd5;    
	mov.b64         {clo,chi}, %rd94;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd45, {r0,r1};      
	mov.b64         %rd94, {r2,r3};      
	}
	// inline asm
	st.local.u64 	[%rd91], %rd45;
	add.s32 	%r39, %r39, 1;
	sub.s32 	%r26, %r39, %r5;
	mul.wide.s32 	%rd50, %r26, 8;
	add.s64 	%rd91, %rd1, %rd50;
	add.s64 	%rd93, %rd93, 8;
	add.s64 	%rd89, %rd89, 8;
	setp.lt.s32	%p3, %r39, %r6;
	@%p3 bra 	BB1_3;

BB1_4:
	st.local.u64 	[%rd93], %rd94;
	ld.local.u64 	%rd95, [%rd1+16];
	ld.local.u64 	%rd96, [%rd1+24];
	and.b32  	%r9, %r3, 63;
	setp.eq.s32	%p4, %r9, 0;
	@%p4 bra 	BB1_6;

	mov.u32 	%r27, 64;
	sub.s32 	%r28, %r27, %r9;
	shl.b64 	%rd51, %rd96, %r9;
	shr.u64 	%rd52, %rd95, %r28;
	or.b64  	%rd96, %rd51, %rd52;
	shl.b64 	%rd53, %rd95, %r9;
	ld.local.u64 	%rd54, [%rd1+8];
	shr.u64 	%rd55, %rd54, %r28;
	or.b64  	%rd95, %rd55, %rd53;

BB1_6:
	shr.u64 	%rd56, %rd96, 62;
	cvt.u32.u64	%r29, %rd56;
	shr.u64 	%rd57, %rd95, 62;
	shl.b64 	%rd58, %rd96, 2;
	or.b64  	%rd98, %rd58, %rd57;
	shl.b64 	%rd97, %rd95, 2;
	shr.u64 	%rd59, %rd96, 61;
	cvt.u32.u64	%r30, %rd59;
	and.b32  	%r31, %r30, 1;
	add.s32 	%r32, %r31, %r29;
	neg.s32 	%r33, %r32;
	setp.eq.s32	%p5, %r40, 0;
	selp.b32	%r34, %r32, %r33, %p5;
	cvta.to.local.u64 	%rd60, %rd37;
	st.local.u32 	[%rd60], %r34;
	setp.eq.s32	%p6, %r31, 0;
	@%p6 bra 	BB1_8;

	mov.u64 	%rd64, 0;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd64;
	mov.b64         {a2,a3}, %rd64;
	mov.b64         {b0,b1}, %rd97;
	mov.b64         {b2,b3}, %rd98;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd97, {r0,r1};
	mov.b64         %rd98, {r2,r3};
	}
	// inline asm
	xor.b32  	%r40, %r40, -2147483648;

BB1_8:
	clz.b64 	%r41, %rd98;
	setp.eq.s32	%p7, %r41, 0;
	@%p7 bra 	BB1_10;

	shl.b64 	%rd67, %rd98, %r41;
	mov.u32 	%r35, 64;
	sub.s32 	%r36, %r35, %r41;
	shr.u64 	%rd68, %rd97, %r36;
	or.b64  	%rd98, %rd68, %rd67;

BB1_10:
	mov.u64 	%rd72, -3958705157555305931;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd98;   
	mov.b64         {blo,bhi}, %rd72;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd69, {r0,r1};     
	mov.b64         %rd100, {r2,r3};     
	}
	// inline asm
	setp.lt.s64	%p8, %rd100, 1;
	@%p8 bra 	BB1_12;

	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd69;
	mov.b64         {a2,a3}, %rd100;
	mov.b64         {b0,b1}, %rd69;
	mov.b64         {b2,b3}, %rd100;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd73, {r0,r1};
	mov.b64         %rd100, {r2,r3};
	}
	// inline asm
	add.s32 	%r41, %r41, 1;

BB1_12:
	cvt.u64.u32	%rd79, %r40;
	shl.b64 	%rd80, %rd79, 32;
	mov.u32 	%r37, 1022;
	sub.s32 	%r38, %r37, %r41;
	cvt.u64.u32	%rd81, %r38;
	shl.b64 	%rd82, %rd81, 52;
	add.s64 	%rd83, %rd100, 1;
	shr.u64 	%rd84, %rd83, 10;
	add.s64 	%rd85, %rd84, 1;
	shr.u64 	%rd86, %rd85, 1;
	add.s64 	%rd87, %rd86, %rd82;
	or.b64  	%rd88, %rd87, %rd80;
	mov.b64 	 %fd4, %rd88;

BB1_13:
	st.param.f64	[func_retval0+0], %fd4;
	ret;
}


